import{_ as a,r as t,o as e,c as p,b as n,d as o,e as r,a as l}from"./app-9d6e6088.js";const c={},i=l(`<h1 id="路由" tabindex="-1"><a class="header-anchor" href="#路由" aria-hidden="true">#</a> 路由</h1><h2 id="路由的模式" tabindex="-1"><a class="header-anchor" href="#路由的模式" aria-hidden="true">#</a> 路由的模式</h2><h3 id="关键词-mode-history模式-hash模式-abstract模式" tabindex="-1"><a class="header-anchor" href="#关键词-mode-history模式-hash模式-abstract模式" aria-hidden="true">#</a> 关键词：&quot;mode&quot;，&quot;history模式&quot;，&quot;hash模式&quot;，&quot;Abstract模式&quot;</h3><p>我们可以在创建的Router中使用模式，如参数mode:history的参数，这个值意思是使用history模式，这种模式充分利用了history.pushState API来完成URL的跳转而无需重新加载页面</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 如果不使用history模式，当访问rank的时候路由就会变成：</span>
<span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">/</span>#rank

<span class="token comment">//反之为：</span>
<span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">/</span>rank
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就是history模式和hash模式的区别，除此之外还有一种abstract模式</p><ul><li>Hash：使用URL hash值作为路由</li><li>History：依赖HTML5 History API和服务器配置</li><li>Abstract：支持所有JavaScript运行环境，如node服务器端。如果发现没有浏览器的API，路由就会强制进入这个模式</li></ul><h2 id="路由与导航" tabindex="-1"><a class="header-anchor" href="#路由与导航" aria-hidden="true">#</a> 路由与导航</h2><p>声明式 <code>&lt;router-link :to=&quot;...&quot;&gt;</code></p><h3 id="关键词-router-link-router-view" tabindex="-1"><a class="header-anchor" href="#关键词-router-link-router-view" aria-hidden="true">#</a> 关键词：&quot;router-link&quot; , &quot;router-view&quot;</h3><p>vue-router提供两个指令标签组件来处理这个导航与自动渲染逻辑：</p><ul><li><p><code>&lt;router-view&gt;</code>——渲染路径匹配到的组件视图</p></li><li><p><code>&lt;router-link&gt;</code>——支持用户在具有路由功能的应用中导航</p></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code> <span class="token comment">&lt;!-- 在router-link通过名称引用路由：向to属性传入一个对象显式的声明路由的名称： --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ name:&#39;rank&#39; }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 这里留意使用v-bind绑定（简写：），因为这里需要向router-link传递的是一个对象{ name:&#39;rank&#39; }而不是一个字符串 --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编程式导航" tabindex="-1"><a class="header-anchor" href="#编程式导航" aria-hidden="true">#</a> 编程式导航</h2><p>编程式 <code>router.push(...)</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 字符串路径</span>
router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/users/eduardo&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 带有路径的对象</span>
router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/users/eduardo&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 命名的路由，并加上参数，让路由建立 url</span>
router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;eduardo&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 带查询参数，结果是 /register?plan=private</span>
router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/register&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">plan</span><span class="token operator">:</span> <span class="token string">&#39;private&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 带 hash，结果是 /about#team</span>
router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token string">&#39;#team&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 向前移动一条记录，与 router.forward() 相同</span>
router<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment">// 返回一条记录，与router.back() 相同</span>
router<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment">// 前进 3 条记录</span>
router<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token comment">// 如果没有那么多记录，静默失败</span>
router<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重定向路由与别名" tabindex="-1"><a class="header-anchor" href="#重定向路由与别名" aria-hidden="true">#</a> 重定向路由与别名</h2><h3 id="关键词-redirect-alias" tabindex="-1"><a class="header-anchor" href="#关键词-redirect-alias" aria-hidden="true">#</a> 关键词：&quot;redirect&quot;，&quot;alias&quot;</h3><p>重定向也是通过 routes 配置来完成，下面例子是从 /a 重定向到 /b：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/a&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/b&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>

<span class="token comment">// 重定向的目标也可以是一个命名的路由</span>

 <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/a&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外我们需要区别重定向和别名，『重定向』的意思是，当用户访问 /a时，URL 将会被替换成 /b，然后匹配路由为 /b，那么『别名』又是什么呢？ /a 的别名是 /b，意味着，当用户访问 /b 时，URL 会保持为 /b，但是路由匹配则为 /a，就像用户访问 /a 一样： 利用<code>alias</code>给路由设置别名</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/a&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token constant">A</span><span class="token punctuation">,</span> <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token string">&#39;/b&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),u={href:"https://router.vuejs.org/zh/introduction.html",target:"_blank",rel:"noopener noreferrer"};function d(k,v){const s=t("ExternalLinkIcon");return e(),p("div",null,[i,n("p",null,[n("a",u,[o("vue Router"),r(s)])])])}const h=a(c,[["render",d],["__file","路由.html.vue"]]);export{h as default};
