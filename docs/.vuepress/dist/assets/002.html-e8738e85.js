import{_ as n,o as s,c as a,a as t}from"./app-fdb0ca41.js";const e="/ahana-docs/webgl/webgl/002-001.jpg",p="/ahana-docs/webgl/webgl/002-002.jpg",i="/ahana-docs/webgl/webgl/002-003.jpg",l="/ahana-docs/webgl/webgl/002-004.jpg",o="/ahana-docs/webgl/webgl/002-005.jpg",c="/ahana-docs/webgl/webgl/002-006.jpg",u="/ahana-docs/webgl/webgl/002-007.jpg",r="/ahana-docs/webgl/webgl/002-008.jpg",d="/ahana-docs/webgl/webgl/002-009.jpg",k="/ahana-docs/webgl/webgl/002-010.jpg",v={},m=t(`<h1 id="_002-webgl入门" tabindex="-1"><a class="header-anchor" href="#_002-webgl入门" aria-hidden="true">#</a> 002-webgl入门</h1><h2 id="_1-最短的webgl程序" tabindex="-1"><a class="header-anchor" href="#_1-最短的webgl程序" aria-hidden="true">#</a> 1. 最短的webgl程序</h2><ul><li>gl.clearColor(r,g,b,a) 指定清空 <code>&lt;canvas&gt;</code> 的颜⾊，接收四个参数（取值区间为 0.0~1.0）</li><li>gl.clear(buffer) 清空 canvas参数分为三项 <ul><li>gl.COLOR_BUFFER_BIT 清空颜色缓存</li><li>gl.DEPTH_BUFFER_BIT 清空深度缓冲区</li><li>gl.STENCIL_BUFFER_BIT 清空模板缓冲区</li></ul></li><li>gl.clear 需要和 gl.clearColor 提到的函数搭配使用 <ul><li>gl.clear(gl.COLOR_BUFFER_BIT) 和 gl.clearColor(0.0,0.0,0.0,1.0)</li><li>gl.clear(gl.DEPTH_BUFFER_BIT) 和 gl.clearDepth(1.0)</li><li>gl.clear(gl.STENCIL_BUFFER_BIT) 和 gl.clearStencil(0)</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>webgl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvas<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>800<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>800<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
            <span class="token keyword">const</span> ctx <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementByld</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> gl <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;webgl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            gl<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">COLOR_BUFFER_BIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-通过webgl绘制一个点" tabindex="-1"><a class="header-anchor" href="#_2-通过webgl绘制一个点" aria-hidden="true">#</a> 2. 通过webgl绘制一个点</h2><h3 id="_2-1-什么是着色器" tabindex="-1"><a class="header-anchor" href="#_2-1-什么是着色器" aria-hidden="true">#</a> 2.1 什么是着色器</h3><p>着色器就是让开发者自己去编写一段程序，用来代替固定渲染管线，来处理图像的渲染。</p><h3 id="_2-2-着色器是什么" tabindex="-1"><a class="header-anchor" href="#_2-2-着色器是什么" aria-hidden="true">#</a> 2.2 着色器是什么？</h3><ul><li><p>顶点着色器</p><ul><li>顶点着色器 -&gt; 用来描述顶点的特性 -&gt; 通过计算获取位置信息</li><li>顶点是指⼆维三维空间中的⼀个点，可以理解为一个个坐标</li></ul></li><li><p>片元着色器</p><ul><li>片元着色器 -&gt; 进行逐片元处理程序 -&gt; 通过计算获取颜色信息</li><li>片元可以理解为一个个像素</li></ul></li></ul><h3 id="_2-3-着色器工作流程" tabindex="-1"><a class="header-anchor" href="#_2-3-着色器工作流程" aria-hidden="true">#</a> 2.3 着色器工作流程</h3><p>JavaScript 读取相关着色器信息，传递给 webgl 并进行使用</p><p><img src="`+e+'" alt="002-001"></p><h2 id="_3-流程介绍" tabindex="-1"><a class="header-anchor" href="#_3-流程介绍" aria-hidden="true">#</a> 3. 流程介绍</h2><p><img src="'+p+'" alt="002-002"></p><h2 id="_4-webgl-坐标系" tabindex="-1"><a class="header-anchor" href="#_4-webgl-坐标系" aria-hidden="true">#</a> 4. webgl 坐标系</h2><h3 id="_4-1-canvas-坐标系" tabindex="-1"><a class="header-anchor" href="#_4-1-canvas-坐标系" aria-hidden="true">#</a> 4.1 canvas 坐标系</h3><p><img src="'+i+'" alt="002-003"></p><h3 id="_4-2-介绍webgl三维坐标" tabindex="-1"><a class="header-anchor" href="#_4-2-介绍webgl三维坐标" aria-hidden="true">#</a> 4.2 介绍webgl三维坐标</h3><ol><li><p>坐标系概览 <img src="'+l+'" alt="002-004"></p></li><li><p>绘图区域 <img src="'+o+'" alt="002-005"></p></li><li><p>右⼿坐标系（左手坐标系？） <img src="'+c+'" alt="002-006"></p></li></ol><h2 id="_5-attribute变量" tabindex="-1"><a class="header-anchor" href="#_5-attribute变量" aria-hidden="true">#</a> 5. attribute变量</h2><h3 id="_5-1-实践—声明-attribute-变量" tabindex="-1"><a class="header-anchor" href="#_5-1-实践—声明-attribute-变量" aria-hidden="true">#</a> 5.1 实践—声明 attribute 变量</h3><ul><li>变量声明 <img src="'+u+`" alt="002-007"></li><li>attribute 变量只能在顶点着色器中使用，不能在片元着色器中使用</li></ul><h3 id="_5-2-实践—获取-attribute-变量" tabindex="-1"><a class="header-anchor" href="#_5-2-实践—获取-attribute-变量" aria-hidden="true">#</a> 5.2 实践—获取 attribute 变量</h3><pre><code>const aPosition = gl.getAttribLocation(program，&#39;aPosition&#39;)；
</code></pre><ul><li><p>获取 attribute 变量需要在 initShader 函数之后，因为会用到 program 这个程序对象。</p></li><li><p>gl.getAttribLocation（program, name）</p><ul><li>program：程序对象</li><li>name：指定想要获取存储地址的 attribute 变量的名称</li><li>返回变量的存储地址</li></ul></li><li><p>实践—给 attribute 变量赋值 gl.vertexAttrib4f(aPosition,0.5,0.5,0.0,1.0);</p></li><li><p>gl.vertexAttrib4f(location, v1, v2, v3,v4)</p><ul><li>location: 变量</li><li>v1: 第⼀个分量的值</li><li>v2: 第二个分量的值</li><li>v3: 第三个分量的值</li><li>v4: 第四个分量的值</li></ul></li><li><p>vertexAttrib3f() 同族函数介绍 location: 指定 attribute 变量的存储位置 v0,v1,v2,v3: 传入的四个分量的值</p><ul><li>gl.vertexAttrib1f(location, v0)</li><li>gl.vertexAttrib2f(location, v0, v1)</li><li>gl.vertexAttrib3f(location, v0, v1, v2)</li><li>gl.vertexAttrib4f(location, v0, v1, v2, v3)</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">const</span> ctx <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> gl <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;webgl&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// 创建着色器源码</span>
  <span class="token keyword">const</span> <span class="token constant">VERTEX_SHADER_SOURCE</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    // 只传递顶点数据
    attribute vec4 aPosition;
    void main() {
      gl_Position = aPosition; // vec4(0.0,0.0,0.0,1.0)
      gl_PointSize = 30.0;
    }
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span> <span class="token comment">// 顶点着色器</span>

  <span class="token keyword">const</span> <span class="token constant">FRAGMENT_SHADER_SOURCE</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    void main() {
      gl_FragColor = vec4(1.0,0.0,0.0,1.0);
    }
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span> <span class="token comment">// 片元着色器</span>

  <span class="token keyword">const</span> program <span class="token operator">=</span> <span class="token function">initShader</span><span class="token punctuation">(</span>gl<span class="token punctuation">,</span> <span class="token constant">VERTEX_SHADER_SOURCE</span><span class="token punctuation">,</span> <span class="token constant">FRAGMENT_SHADER_SOURCE</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> aPosition <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">getAttribLocation</span><span class="token punctuation">(</span>program<span class="token punctuation">,</span> <span class="token string">&#39;aPosition&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// gl.vertexAttrib4f(aPosition, 0.5,0.5,0.0,1.0)</span>
  <span class="token comment">// gl.vertexAttrib3f(aPosition, 0.5,0.5,0.0)</span>
  <span class="token comment">// gl.vertexAttrib2f(aPosition, 0.5,0.5)</span>

  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    x <span class="token operator">+=</span> <span class="token number">0.1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    gl<span class="token punctuation">.</span><span class="token function">vertexAttrib1f</span><span class="token punctuation">(</span>aPosition<span class="token punctuation">,</span> x<span class="token punctuation">)</span>

    gl<span class="token punctuation">.</span><span class="token function">drawArrays</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">POINTS</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-流程" tabindex="-1"><a class="header-anchor" href="#_5-3-流程" aria-hidden="true">#</a> 5.3 流程</h3><p><img src="`+r+'" alt="002-008"></p><h2 id="_6-通过鼠标控制绘制" tabindex="-1"><a class="header-anchor" href="#_6-通过鼠标控制绘制" aria-hidden="true">#</a> 6. 通过鼠标控制绘制</h2><h3 id="_6-1-整体流程" tabindex="-1"><a class="header-anchor" href="#_6-1-整体流程" aria-hidden="true">#</a> 6.1 整体流程</h3><p><img src="'+d+`" alt="002-009"></p><h3 id="_6-2-代码" tabindex="-1"><a class="header-anchor" href="#_6-2-代码" aria-hidden="true">#</a> 6.2 代码</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> ctx <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> gl <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;webgl&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 创建着色器源码</span>
<span class="token keyword">const</span> <span class="token constant">VERTEX_SHADER_SOURCE</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    // 只传递顶点数据
    attribute vec4 aPosition;
    void main() {
    gl_Position = aPosition; // vec4(0.0,0.0,0.0,1.0)
    gl_PointSize = 10.0;
    }
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span> <span class="token comment">// 顶点着色器</span>

<span class="token keyword">const</span> <span class="token constant">FRAGMENT_SHADER_SOURCE</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    void main() {
    gl_FragColor = vec4(1.0,0.0,0.0,1.0);
    }
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span> <span class="token comment">// 片元着色器</span>

<span class="token keyword">const</span> program <span class="token operator">=</span> <span class="token function">initShader</span><span class="token punctuation">(</span>gl<span class="token punctuation">,</span> <span class="token constant">VERTEX_SHADER_SOURCE</span><span class="token punctuation">,</span> <span class="token constant">FRAGMENT_SHADER_SOURCE</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> aPosition <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">getAttribLocation</span><span class="token punctuation">(</span>program<span class="token punctuation">,</span> <span class="token string">&#39;aPosition&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
ctx<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 坐标</span>
    <span class="token keyword">const</span> x <span class="token operator">=</span> ev<span class="token punctuation">.</span>clientX
    <span class="token keyword">const</span> y <span class="token operator">=</span> ev<span class="token punctuation">.</span>clientY

    <span class="token keyword">const</span> domPosition <span class="token operator">=</span> ev<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> domx <span class="token operator">=</span> x <span class="token operator">-</span> domPosition<span class="token punctuation">.</span>left
    <span class="token keyword">const</span> domy <span class="token operator">=</span> y <span class="token operator">-</span> domPosition<span class="token punctuation">.</span>top<span class="token punctuation">;</span>

    <span class="token comment">/*
    0 200 400

    -1 0 1

    -200 0 200

    -1 0 1

    需要先 -200 （当前画布的宽度） 然后再 除以 200

    1 0 -1

    0 200 400

    200 0 -200 / 200

    需要先让 200 减这个数，然后再 / 200

    * */</span>
    <span class="token keyword">const</span> halfWidth <span class="token operator">=</span> ctx<span class="token punctuation">.</span>offsetWidth <span class="token operator">/</span> <span class="token number">2</span>
    <span class="token keyword">const</span> halfHeight <span class="token operator">=</span> ctx<span class="token punctuation">.</span>offsetHeight <span class="token operator">/</span> <span class="token number">2</span>

    <span class="token keyword">const</span> clickX <span class="token operator">=</span> <span class="token punctuation">(</span>domx <span class="token operator">-</span> halfWidth<span class="token punctuation">)</span> <span class="token operator">/</span> halfWidth
    <span class="token keyword">const</span> clickY <span class="token operator">=</span> <span class="token punctuation">(</span>halfHeight <span class="token operator">-</span> domy<span class="token punctuation">)</span> <span class="token operator">/</span> halfHeight

    points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    clickX<span class="token punctuation">,</span> clickY
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        gl<span class="token punctuation">.</span><span class="token function">vertexAttrib2f</span><span class="token punctuation">(</span>aPosition<span class="token punctuation">,</span> points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>clickX<span class="token punctuation">,</span> points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>clickY<span class="token punctuation">)</span>

        gl<span class="token punctuation">.</span><span class="token function">drawArrays</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">POINTS</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-使用uniform改变点的颜色" tabindex="-1"><a class="header-anchor" href="#_7-使用uniform改变点的颜色" aria-hidden="true">#</a> 7. 使用uniform改变点的颜色</h2><h3 id="_7-1-使用-uniform-变量" tabindex="-1"><a class="header-anchor" href="#_7-1-使用-uniform-变量" aria-hidden="true">#</a> 7.1 使用 uniform 变量</h3><p>添加 uniform 变量，设置到颜色上</p><h3 id="_7-2-获取-uniform-变量存储地址" tabindex="-1"><a class="header-anchor" href="#_7-2-获取-uniform-变量存储地址" aria-hidden="true">#</a> 7.2 获取 uniform 变量存储地址</h3><p>const ucolor = gl.getUniformLocation(program，&#39;ucolor&#39;);</p><ul><li>gl.getUniformLocation（program, name） <ul><li>此方法使用和⼊参与 gl.getAttribLocation 相同</li><li>program: 包含顶点和⽚元着⾊器的程序对象</li><li>name： uniform 变量的名称</li></ul></li></ul><h3 id="_7-3-给uniform-变量赋值" tabindex="-1"><a class="header-anchor" href="#_7-3-给uniform-变量赋值" aria-hidden="true">#</a> 7.3 给uniform 变量赋值</h3><p>gl.uniform4f(uColor,1.0，0.0，0.0,1.0);</p><ul><li>gl.uniform4f（location, v0, v1, v2, v3） <ul><li>location：指定 uniform 的存储地址</li><li>v0：第⼀个分量的值</li><li>v1：第二个分量的值</li><li>v2：第三个分量的值</li><li>v3：第四个分量的值</li></ul></li></ul><h3 id="_7-4-设置精度" tabindex="-1"><a class="header-anchor" href="#_7-4-设置精度" aria-hidden="true">#</a> 7.4 设置精度</h3><p>precision mediump float;</p><ul><li>⾼精度：highp， 低精度:lowp</li></ul><h3 id="_7-5-uniform4f-同族函数介绍" tabindex="-1"><a class="header-anchor" href="#_7-5-uniform4f-同族函数介绍" aria-hidden="true">#</a> 7.5 uniform4f() 同族函数介绍</h3><p>location: 指定 uniform变量的存储位置 v0,v1,v2,v3: 传入的四个分量的值</p><ul><li>gl.uniform1f(location, v0)</li><li>gl.uniform2f(location, v0, v1)</li><li>gl.uniform3f(location, v0, v1, v2)</li><li>gl.uniform4f(location, v0, v1, v2, v3)</li></ul><h2 id="_8-流程" tabindex="-1"><a class="header-anchor" href="#_8-流程" aria-hidden="true">#</a> 8 流程</h2><p><img src="`+k+'" alt="002-010"></p>',50),b=[m];function g(h,_){return s(),a("div",null,b)}const w=n(v,[["render",g],["__file","002.html.vue"]]);export{w as default};
