import{_ as t,r as o,o as p,c,b as n,d as s,e,a as i}from"./app-676abf65.js";const l={},r=n("h1",{id:"umijs",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#umijs","aria-hidden":"true"},"#"),s(" UmiJS")],-1),u={href:"https://v3.umijs.org/zh-CN/docs/getting-started",target:"_blank",rel:"noopener noreferrer"},d={href:"https://pro.ant.design/zh-CN/docs/getting-started/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://v3.umijs.org/plugins/preset-react",target:"_blank",rel:"noopener noreferrer"},m={href:"https://umijs.org/docs/tutorials/getting-started",target:"_blank",rel:"noopener noreferrer"},v={href:"https://procomponents.ant.design/components/",target:"_blank",rel:"noopener noreferrer"},h=i(`<h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><ul><li><p>config.js src/config/config.js 配置式路由与约定式路由</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;umi&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> routes <span class="token keyword">from</span> <span class="token string">&#39;./routes&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  base<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
  publicPath<span class="token operator">:</span> <span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span>
  hash<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  history<span class="token operator">:</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  nodeModulesTransform<span class="token operator">:</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token string">&#39;none&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 继承 layout 公共模板</span>
  layout<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  locale<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 默认语言，当检测不到具体语言时，展示 default 中指定的语言。</span>
    antd<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 开启后，支持 antd 国际化</span>
    title<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 在项目中配置的 title 及路由中的 title 可直接使用国际化 key，自动被转成对应语言的文案</span>
    baseNavigator<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 开启浏览器语言检测。</span>
    baseSeparator<span class="token operator">:</span> <span class="token string">&#39;-&#39;</span> <span class="token comment">// 国家（lang） 与 语言（language） 之间的分割符。</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  routes<span class="token operator">:</span> routes<span class="token punctuation">,</span> <span class="token comment">// 有routes是配置式路由 || 无routes是约定式路由（读取pages文件夹自动生成）</span>
  fastRefresh<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 快速刷新（Fast Refresh），开发时可以保持组件状态，同时编辑提供即时反馈。</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="权限管理" tabindex="-1"><a class="header-anchor" href="#权限管理" aria-hidden="true">#</a> 权限管理</h3>`,3);function b(f,g){const a=o("ExternalLinkIcon");return p(),c("div",null,[r,n("p",null,[n("a",u,[s("UmiJS"),e(a)]),n("a",d,[s("Ant Design Pro"),e(a)]),n("a",k,[s("v3.umijs"),e(a)]),n("a",m,[s("Umi-js"),e(a)]),n("a",v,[s("antd的二次封装-ProComponents"),e(a)]),s(" layout配置参考")]),h])}const y=t(l,[["render",b],["__file","UmiJS.html.vue"]]);export{y as default};
