import{_ as p,r as c,o,c as l,b as n,d as s,e as t,a as e}from"./app-676abf65.js";const i={},u=n("h1",{id:"react相关组件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react相关组件","aria-hidden":"true"},"#"),s(" react相关组件")],-1),r={href:"https://create-react-app.bootcss.com/docs/getting-started",target:"_blank",rel:"noopener noreferrer"},d=n("h2",{id:"react-virtualized",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-virtualized","aria-hidden":"true"},"#"),s(" react-virtualized")],-1),k={href:"https://github.com/bvaughn/react-virtualized",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/bvaughn/react-virtualized/blob/master/docs/README.md",target:"_blank",rel:"noopener noreferrer"},v=e(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> List <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-virtualized&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;react-virtualized/styles.css&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;Brian Vaughn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">rowRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
key<span class="token punctuation">,</span> <span class="token comment">// Unique key within array of rows</span>
index<span class="token punctuation">,</span> <span class="token comment">// 索引号</span>
isScrolling<span class="token punctuation">,</span> <span class="token comment">// 当前是否在滚动中</span>
isVisible<span class="token punctuation">,</span> <span class="token comment">// 当前项在List中是可见的</span>
style<span class="token punctuation">,</span> <span class="token comment">// 重点属性 一定要给每一行数据添加该样式！作用：指定每一行的位置</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>key<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token punctuation">{</span>list<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token plain-text"> </span><span class="token punctuation">{</span>isScrolling <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">List</span></span>
    <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">300</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">300</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">rowCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>list<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span> <span class="token comment">// 多少行</span>
    <span class="token attr-name">rowHeight</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span></span> <span class="token comment">// 每行高度</span>
    <span class="token attr-name">rowRenderer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rowRenderer<span class="token punctuation">}</span></span> <span class="token comment">// 渲染每一行的函数</span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>measureAllRows <ul><li>点击屏幕滚动不准问题</li></ul></li></ul>`,2),b={href:"https://github.com/bvaughn/react-virtualized/blob/master/docs/AutoSizer.md",target:"_blank",rel:"noopener noreferrer"},g=n("h2",{id:"css-in-js",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#css-in-js","aria-hidden":"true"},"#"),s(" CSS IN JS")],-1),h={href:"https://styled-components.com/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/css-modules/css-modules/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"},f=e(`<ul><li><p>实现方式 webpack的css-loader 插件</p></li><li><p>BEM Block块 Element元素 Modifier 三个部分组成 命名规范</p></li><li><p>在React脚手架中演化成：文件名、雷鸣、hash（随机） 三部分， 只需要指定类名即可</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// 自动生成的类名</span>
    <span class="token punctuation">[</span>filename<span class="token punctuation">]</span>_<span class="token punctuation">[</span>classname<span class="token punctuation">]</span>_<span class="token punctuation">[</span>hash<span class="token punctuation">]</span>

    <span class="token comment">// 类名</span>
    <span class="token punctuation">.</span>error <span class="token punctuation">{</span>
        <span class="token punctuation">.</span>Button_error__ax7yz <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>在项目中的使用 [name].module.css</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// 创建文件</span>
    test<span class="token punctuation">.</span>module<span class="token punctuation">.</span>css
        <span class="token punctuation">.</span>testStyle <span class="token punctuation">{</span>
            <span class="token literal-property property">color</span><span class="token operator">:</span> #<span class="token number">333</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 全局类名 root 顶级标签</span>
        <span class="token operator">:</span><span class="token function">global</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">.</span>testStyle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token operator">:</span>root <span class="token operator">:</span><span class="token function">global</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">.</span>testStyle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// 引入文件</span>
    <span class="token keyword">import</span> test <span class="token keyword">from</span> <span class="token string">&#39;./test.module.css&#39;</span>

    <span class="token comment">// 使用文件</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">{</span>test<span class="token punctuation">.</span>test_style<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,3);function y(x,j){const a=c("ExternalLinkIcon");return o(),l("div",null,[u,n("p",null,[n("a",r,[s("create-react-app"),t(a)])]),d,n("p",null,[s("基于 可视区域渲染 原理进行开发 "),n("a",k,[s("react-virtualized"),t(a)])]),n("ul",null,[n("li",null,[n("p",null,[s("List "),n("a",m,[s("List"),t(a)])]),v]),n("li",null,[n("p",null,[s("AutoSizer 让list组件占满屏幕 "),n("a",b,[s("AutoSizer"),t(a)])])])]),g,n("ul",null,[n("li",null,[n("p",null,[s("styled-components "),n("a",h,[s("styled-components"),t(a)])])]),n("li",null,[n("p",null,[s("CSS Modules (React脚手架已经集成，可以直接使用) "),n("a",_,[s("CSS Modules"),t(a)])]),f])])])}const S=p(i,[["render",y],["__file","React相关组件.html.vue"]]);export{S as default};
