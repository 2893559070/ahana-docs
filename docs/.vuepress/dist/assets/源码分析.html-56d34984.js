import{_ as p,r as e,o,c,b as n,d as s,e as l,a as i}from"./app-9d6e6088.js";const u={},r=n("h1",{id:"源码解析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#源码解析","aria-hidden":"true"},"#"),s(" 源码解析")],-1),d=n("p",null,[n("a",{href:"bootCDN.com"},"在线cdn")],-1),k={href:"https://gitee.com/ahan-pot/vue2-source-code-learning",target:"_blank",rel:"noopener noreferrer"},m=n("h2",{id:"模板引擎-mustache",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#模板引擎-mustache","aria-hidden":"true"},"#"),s(" 模板引擎 mustache")],-1),v=["src"],h=i(`<p>数据变成视图的方法 v-for 实现方式</p><h2 id="虚拟dom" tabindex="-1"><a class="header-anchor" href="#虚拟dom" aria-hidden="true">#</a> 虚拟dom</h2><h3 id="snabbdom" tabindex="-1"><a class="header-anchor" href="#snabbdom" aria-hidden="true">#</a> snabbdom</h3><p>使用 webpack5 来运行</p><p>vue 虚拟dom所用的包 snabbdom</p><h3 id="虚拟dom与h函数" tabindex="-1"><a class="header-anchor" href="#虚拟dom与h函数" aria-hidden="true">#</a> 虚拟dom与h函数</h3><p>将虚拟对象生成真实dom</p><p>将新虚拟dom与老虚拟dom进行diff（精细比较），算出应该如何最小量更新，最后反映到真正的DOM上。</p><ul><li>研究一：虚拟DOM如何被渲染函数（h函数）产生</li><li>研究二：diff算法原理？ 手写diff算法</li><li>研究三：虚拟DON如何通过diff变为真正的DOM的 事实上，虚拟DOM变回真正的DOM，是涵盖在diff算法里面的</li></ul><h3 id="虚拟dom如何被渲染函数-h函数-产生" tabindex="-1"><a class="header-anchor" href="#虚拟dom如何被渲染函数-h函数-产生" aria-hidden="true">#</a> 虚拟DOM如何被渲染函数（h函数）产生</h3><ul><li><p>h函数产生虚拟节点</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">// 调用h函数 props = properties(属性)</span>
  <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&#39;url&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;内容&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// 将得到这样的虚拟节点</span>
  <span class="token punctuation">{</span><span class="token string-property property">&#39;sel&#39;</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;data&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&#39;url&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;text&#39;</span><span class="token operator">:</span> <span class="token string">&#39;内容&#39;</span><span class="token punctuation">}</span>

  <span class="token comment">// 真实节点</span>
  <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;url&quot;</span><span class="token operator">&gt;</span> 内容 <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>

  <span class="token comment">// dom 节点</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token comment">// 子元素</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 属性 样式</span>
    <span class="token literal-property property">elm</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token comment">// 元素对应的真正的dom节点，undefined表示还没上树</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token comment">// 元素（节点）的唯一标识 服务于diff算法</span>
    <span class="token literal-property property">sel</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 选择器 select</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;我是内容&quot;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/* ----------------------------------------------------------- */</span>
  <span class="token comment">// 全部过程</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> init<span class="token punctuation">,</span> classModule<span class="token punctuation">,</span> propsModule<span class="token punctuation">,</span> styleModule<span class="token punctuation">,</span> eventListenersModule<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;snabbdom&quot;</span><span class="token punctuation">;</span>

  <span class="token comment">// 创建出patch函数</span>
  <span class="token keyword">const</span> patch <span class="token operator">=</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token comment">// Init patch function with chosen modules</span>
    classModule<span class="token punctuation">,</span> <span class="token comment">// makes it easy to toggle classes</span>
    propsModule<span class="token punctuation">,</span> <span class="token comment">// for setting properties on DOM elements</span>
    styleModule<span class="token punctuation">,</span> <span class="token comment">// handles styling on elements with support for animations</span>
    eventListenersModule<span class="token punctuation">,</span> <span class="token comment">// attaches event listeners</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 创建虚拟节点</span>
  <span class="token keyword">const</span> myVnode1 <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>
    <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&quot;http://www.baidu.com&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&quot;_blank&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;百度&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> myVnode2 <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>
    <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">class</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">box</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;我是一个盒子&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 让虚拟节点上树</span>
  <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">patch</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> myVnode2<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>h函数嵌套使用，得到虚拟DOM树（重要）</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> myVnode3 <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
  <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;苹果&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;哈哈&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;嘻嘻&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;香蕉&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;火龙果&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 让虚拟节点上树</span>
<span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">patch</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> myVnode3<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),b=n("li",null,[n("p",null,"使用key来标识节点 来进行最小量更新")],-1),f=n("li",null,[n("p",null,"只有是同一个虚拟节点（选择器与key相同），才会进行精细化比较"),n("ul",null,[n("li",null,"旧节点的key和新节点的key相同"),n("li",null,"旧节点的选择器要和新节点的选择器相同")])],-1),y=n("li",null,[n("p",null,"只进行同层比较，不会进行跨层比较")],-1),g=["src"],q=n("li",null,[n("p",null,"四种命中查找 （diff算法的优化测略） 从上往下命中一个就不在进行命中判断，如果都没有命中就需要通过循环来寻找")],-1),_=n("ol",null,[n("li",null,"新前与旧前"),n("li",null,"新后与旧后"),n("li",null,"新后与旧前"),n("li",null,"新前与旧后")],-1);function w(a,M){const t=e("ExternalLinkIcon");return o(),c("div",null,[r,d,n("p",null,[n("a",k,[s("源码解析个人代码仓库"),l(t)])]),m,n("img",{src:a.$withBase("/vue2/3"),alt:"foo"},null,8,v),h,n("ul",null,[b,f,y,n("li",null,[n("p",null,[s("虚拟dom流程图 "),n("img",{src:a.$withBase("/vue2/4"),alt:"foo"},null,8,g)])]),q]),_])}const D=p(u,[["render",w],["__file","源码分析.html.vue"]]);export{D as default};
