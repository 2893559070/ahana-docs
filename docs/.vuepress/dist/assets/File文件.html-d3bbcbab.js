import{_ as a,p as n,q as e,a1 as i}from"./framework-5866ffd3.js";const s={},l=i(`<h1 id="file类" tabindex="-1"><a class="header-anchor" href="#file类" aria-hidden="true">#</a> File类</h1><h2 id="创建目录及文件" tabindex="-1"><a class="header-anchor" href="#创建目录及文件" aria-hidden="true">#</a> 创建目录及文件</h2><ul><li><h3 id="public-boolean-createfilenext" tabindex="-1"><a class="header-anchor" href="#public-boolean-createfilenext" aria-hidden="true">#</a> public boolean createFileNext</h3><p>创建文件，如果存在此文件，就不用创建</p></li><li><h3 id="public-boolean-mkdir" tabindex="-1"><a class="header-anchor" href="#public-boolean-mkdir" aria-hidden="true">#</a> public boolean mkdir</h3><p>创建文件夹，如果存在此文件夹，就不用创建</p></li><li><h3 id="public-boolean-mkdirs" tabindex="-1"><a class="header-anchor" href="#public-boolean-mkdirs" aria-hidden="true">#</a> public boolean mkdirs</h3><p>创建文件夹，如果父文件不存在，会帮你把他创建出来</p></li><li><h3 id="public-boolean-delete" tabindex="-1"><a class="header-anchor" href="#public-boolean-delete" aria-hidden="true">#</a> public boolean delete()</h3><p>如果文件/目录被其他程序占用，不能删除。如果此路径名表示一个目录，则该目录必须为空才能删除（目录里不能有目录或者文件）。</p></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;bbb.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
file<span class="token punctuation">.</span><span class="token function">createFileNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">File</span> file1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;bbb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
file1<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    
<span class="token class-name">File</span> file2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;bbb\\\\ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
file2<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    
<span class="token class-name">File</span> file2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;bbb\\\\ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
file2<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><h3 id="file-方法" tabindex="-1"><a class="header-anchor" href="#file-方法" aria-hidden="true">#</a> File 方法</h3><ul><li><h4 id="public-boolean-isdirection" tabindex="-1"><a class="header-anchor" href="#public-boolean-isdirection" aria-hidden="true">#</a> public boolean isDirection</h4><p>判断是否为目录</p></li><li><h4 id="public-boolean-isfile" tabindex="-1"><a class="header-anchor" href="#public-boolean-isfile" aria-hidden="true">#</a> public boolean isFile</h4><p>判断是否为文件</p></li><li><h4 id="public-boolean-ishidden" tabindex="-1"><a class="header-anchor" href="#public-boolean-ishidden" aria-hidden="true">#</a> public boolean isHidden</h4><p>判断是否隐藏</p></li><li><h4 id="public-boolean-exit" tabindex="-1"><a class="header-anchor" href="#public-boolean-exit" aria-hidden="true">#</a> public boolean exit</h4><p>判断是否存在</p></li><li><h4 id="public-boolean-canread" tabindex="-1"><a class="header-anchor" href="#public-boolean-canread" aria-hidden="true">#</a> public boolean canRead</h4><p>判断是否可读</p></li><li><h4 id="public-boolean-canwrite" tabindex="-1"><a class="header-anchor" href="#public-boolean-canwrite" aria-hidden="true">#</a> public boolean canWrite</h4><p>判断是否可写</p></li><li><h4 id="public-string-getabsoultepath" tabindex="-1"><a class="header-anchor" href="#public-string-getabsoultepath" aria-hidden="true">#</a> public String getAbsoultePath</h4><p>获取文件的绝对路径</p></li><li><h4 id="public-string-getpath" tabindex="-1"><a class="header-anchor" href="#public-string-getpath" aria-hidden="true">#</a> public String getPath</h4><p>获取文件路径</p></li><li><h4 id="public-string-getname" tabindex="-1"><a class="header-anchor" href="#public-string-getname" aria-hidden="true">#</a> public String getName</h4><p>获取文件名称</p></li><li><h4 id="public-long-length" tabindex="-1"><a class="header-anchor" href="#public-long-length" aria-hidden="true">#</a> public long length</h4><p>获取文件长度</p></li><li><h4 id="public-long-lastmethodfiled" tabindex="-1"><a class="header-anchor" href="#public-long-lastmethodfiled" aria-hidden="true">#</a> public long lastMethodFiled</h4><p>获取文件最后修改时间</p></li><li><h4 id="public-string-list" tabindex="-1"><a class="header-anchor" href="#public-string-list" aria-hidden="true">#</a> public String [] list</h4><p>获取文件目录，或者文件数组名</p></li><li><h4 id="public-string-listfile" tabindex="-1"><a class="header-anchor" href="#public-string-listfile" aria-hidden="true">#</a> public String [] listFile</h4><p>获取指定目录下的所有文件，或者数组文件</p></li></ul></li></ul>`,5),t=[l];function c(p,o){return n(),e("div",null,t)}const d=a(s,[["render",c],["__file","File文件.html.vue"]]);export{d as default};
