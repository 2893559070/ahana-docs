import{_ as o,o as t,c as e,a as n}from"./app-9d6e6088.js";const r={},l=n('<h1 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h1><h2 id="内置数据类型" tabindex="-1"><a class="header-anchor" href="#内置数据类型" aria-hidden="true">#</a> 内置数据类型</h2><p>Java语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。</p><ol><li><p><strong>byte: 数据类型是8位、有符号的，以二进制补码表示的整数；</strong> byte 类型用在大型数组中节约空间，主要代替整数，因为 byte 变量占用的空间只有 int 类型的四分之一；</p></li><li><p><strong>short: 数据类型是 16 位、有符号的以二进制补码表示的整数</strong> Short 数据类型也可以像 byte 那样节省空间。一个short变量是int型变量所占空间的二分之一；</p></li><li><p><strong>int： 数据类型是32位、有符号的以二进制补码表示的整数；</strong> 一般地整型变量默认为 int 类型；</p></li><li><p><strong>long： 数据类型是 64 位、有符号的以二进制补码表示的整数；</strong> 这种类型主要使用在需要比较大整数的系统上；<code>long a = 100000L</code>，<code>Long b = -200000L</code>。 &quot;L&quot;理论上不分大小写，但是若写成&quot;l&quot;容易与数字&quot;1&quot;混淆，不容易分辩。所以最好大写。</p></li><li><p><strong>float： 数据类型是单精度、32位、符合IEEE 754标准的浮点数；</strong> 浮点数不能用来表示精确的值，如货币；例子：<code>float f1 = 234.5f</code>。</p></li><li><p>**double： 数据类型是双精度、64 位、符合 IEEE 754 标准的浮点数； ** double类型同样不能表示精确的值，如货币；</p></li><li><p><strong>boolean： 数据类型表示一位的信息；</strong> 这种类型只作为一种标志来记录 true/false 情况；</p></li><li><p><strong>char： 类型是一个单一的 16 位 Unicode 字符；</strong></p><p>char 数据类型可以储存任何字符；</p></li></ol>',4),a=[l];function i(s,c){return t(),e("div",null,a)}const p=o(r,[["render",i],["__file","数据类型.html.vue"]]);export{p as default};
