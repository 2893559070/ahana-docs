import{_ as i,o as t,c as l,b as n,a as s}from"./app-676abf65.js";const o={},e=s(`<h1 id="spring-boot" tabindex="-1"><a class="header-anchor" href="#spring-boot" aria-hidden="true">#</a> spring boot</h1><p>springboot</p><ul><li>是什么</li><li>配置如何编写 yaml</li><li>自动装配原理：重要，谈资</li><li>集成web开发：业务的核心</li><li>集成 数据库 Druid</li><li>分布式开发：Dubbo + zookeeper</li><li>swagger：接口文档</li><li>任务调度</li><li>SpringSecurity：Shiro （aop 横切）</li><li>linux部署</li></ul><p>springcloud</p><ul><li>微服务</li><li>springcloud入门</li><li>Restful风格</li><li>Eureka</li><li>Ribbon</li><li>Feign</li><li>HyStrix</li><li>Zuul路由网关</li><li>springCloud config ： 操作git</li></ul><p>banner 自定义启动输出</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>  - resources
    - banner.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原理初探" tabindex="-1"><a class="header-anchor" href="#原理初探" aria-hidden="true">#</a> 原理初探</h2>`,8),p=s(`<li><p>pom.xml</p><ul><li>spring-boot-dependencies : 核心依赖在父工程中</li><li>我们在写或者引入一些springboot依赖的时候，不需要指定版本，就因为有这些版本仓库</li><li>启动器 <ul><li><p>就是springboot的启动场景</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artfactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artfactId</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>比如spring-boot-starter-web，他就会帮我们自动导入web环境所有的依赖</p></li><li><p>springboot会将所有的功能场景，都变成一个个的启动器</p></li><li><p>我们要使用什么功能，就只需要找到对应的启动器就可以了 starter</p></li></ul></li></ul></li>`,1),c=n("p",null,"主程序",-1),u=s(`<p>注解</p><ul><li><p>@SpringBootApplication 标注这个类是一个springboot的应用</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@SpringBootConfiguration</span> <span class="token comment">// springboot的配置</span>
    <span class="token annotation punctuation">@Configuration</span> <span class="token comment">// spring配置类</span>
    <span class="token annotation punctuation">@Component</span> <span class="token comment">// 说明这也是一个spring的组件</span>
  
  <span class="token annotation punctuation">@EnableAutoConfiguration</span> <span class="token comment">// 自动配置</span>
    <span class="token annotation punctuation">@AutoConfigurationPackage</span> <span class="token comment">// 自动配置包</span>
      <span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">AutoConfigurationPackafes<span class="token punctuation">.</span>Registrar</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token comment">// 自动配置包注册</span>
    <span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">AutoConfigurationImportSelector</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token comment">// 自动配置导入选择</span>
      <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> configuratios <span class="token operator">=</span> <span class="token function">getCandidateConfigurations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,2),r=["src"],d=["src"],g=n("li",null,[n("p",null,"SpringApplication.run() 将springboot应用启动")],-1);function m(a,k){return t(),l("div",null,[e,n("ul",null,[p,n("li",null,[c,n("ul",null,[n("li",null,[u,n("img",{src:a.$withBase("/spring5/6-1.png"),alt:"foo"},null,8,r),n("img",{src:a.$withBase("/spring5/6-1-1.png"),alt:"foo"},null,8,d)]),g])])])])}const v=i(o,[["render",m],["__file","spring boot.html.vue"]]);export{v as default};
