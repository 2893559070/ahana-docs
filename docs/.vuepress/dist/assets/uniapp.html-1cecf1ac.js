import{_ as t,r as p,o as e,c as o,b as n,d as s,e as i,a as c}from"./app-9d6e6088.js";const l={},u=n("h1",{id:"uniapp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uniapp","aria-hidden":"true"},"#"),s(" uniapp")],-1),r={href:"https://uniapp.dcloud.io/quickstart-hx",target:"_blank",rel:"noopener noreferrer"},d=c(`<h2 id="页面配置项-参考-微信小程序" tabindex="-1"><a class="header-anchor" href="#页面配置项-参考-微信小程序" aria-hidden="true">#</a> 页面配置项 参考 微信小程序</h2><h2 id="网络数据请求" tabindex="-1"><a class="header-anchor" href="#网络数据请求" aria-hidden="true">#</a> 网络数据请求</h2><ul><li>因为小程序中无法使用axios，而wx.request功能过于简单，所以下载加强版网络请求包 @escook/request-miniprogram</li><li>main.js 入口文件中配置<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token keyword">import</span> <span class="token punctuation">{</span> $http <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@escook/request-miniprogram&#39;</span>
    <span class="token comment">// 从网络请求包中引入$http请求对象</span>
    uni<span class="token punctuation">.</span>$http <span class="token operator">=</span> $http
    <span class="token comment">// 因为在其他的页面或组件中也要使用，所以要将$http对象挂载到全局对象下，在uni-app中，uni是全局对象</span>
    $http<span class="token punctuation">.</span>baseUrl <span class="token operator">=</span> <span class="token string">&#39;https://www.baidu.com&#39;</span>
    <span class="token comment">// 请求拦截器 配置网络请求基础地址，因为uni.$http为$http的引用，所以可以直接修改$http对象下的属性</span>
    $http<span class="token punctuation">.</span><span class="token function-variable function">beforeRequest</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//配置发起网络请求前的拦截功能</span>
        uni<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;加载中...&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 响应拦截器</span>
    $http<span class="token punctuation">.</span><span class="token function-variable function">afterRequest</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//配置网络请求完毕后的拦截功能</span>
        uni<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 封装请求失败提示信息</span>
    uni<span class="token punctuation">.</span><span class="token function-variable function">$showMsg</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">&#39;数据加载失败&#39;</span><span class="token punctuation">,</span>duration<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            title<span class="token punctuation">,</span>
            duration<span class="token punctuation">,</span>
            <span class="token literal-property property">icon</span><span class="token operator">:</span><span class="token string">&#39;none&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 使用网络</span>
    <span class="token keyword">async</span> <span class="token function">getFloorList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span>message<span class="token punctuation">,</span>meta<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> uni<span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>meta<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token keyword">return</span> uni<span class="token punctuation">.</span><span class="token function">$showMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token operator">=</span> message
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="iso-图片兼容性" tabindex="-1"><a class="header-anchor" href="#iso-图片兼容性" aria-hidden="true">#</a> iso 图片兼容性</h2><ul><li>webp 后缀文件在 iso 设备上无法正常显示</li></ul>`,5);function k(v,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",r,[s("uniapp官网"),i(a)])]),d])}const b=t(l,[["render",k],["__file","uniapp.html.vue"]]);export{b as default};
