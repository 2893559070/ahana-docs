import{_ as e,o as a,c as l,a as i}from"./app-9d6e6088.js";const n={},r=i('<h1 id="_001-了解webgl" tabindex="-1"><a class="header-anchor" href="#_001-了解webgl" aria-hidden="true">#</a> 001-了解Webgl</h1><h2 id="_1-什么是webgl" tabindex="-1"><a class="header-anchor" href="#_1-什么是webgl" aria-hidden="true">#</a> 1. 什么是webgl</h2><p>webgl是一种3D绘图协议，衍生于 OpenGL ES2.0，可以结合 Html5 和 JavaScript 在网页上绘制和渲染二/三维图形。</p><h2 id="_2-为什么学webgl" tabindex="-1"><a class="header-anchor" href="#_2-为什么学webgl" aria-hidden="true">#</a> 2. 为什么学webgl</h2><ul><li>数据可视化</li><li>图形/游戏引擎</li><li>交互演示、图形渲染</li><li>地图</li><li>VR</li><li>物品展示</li><li>室内设计</li><li>城市规划</li></ul><h2 id="_3-webgl的优势" tabindex="-1"><a class="header-anchor" href="#_3-webgl的优势" aria-hidden="true">#</a> 3. webgl的优势</h2><ul><li>内嵌在浏览器中，不需要安装任何插件即可运⾏；</li><li>只需要⼀个⽂本编辑器和浏览器，就可以编写三维图形程序；</li><li>学习和使用比较简单。</li></ul><h2 id="_4-webgl程序结构" tabindex="-1"><a class="header-anchor" href="#_4-webgl程序结构" aria-hidden="true">#</a> 4. webgl程序结构</h2><ul><li>HTML</li><li>JavaScript</li><li>GLSL ES <ul><li>GLSL ES 是以字符串的形式存在在 JavaScript 中的</li></ul></li></ul><h2 id="_5-webgl开源框架" tabindex="-1"><a class="header-anchor" href="#_5-webgl开源框架" aria-hidden="true">#</a> 5. webgl开源框架</h2><ol><li>Three.js：JavaScript 3D WebGL库</li><li>Babylon.js：Web3D图形引擎</li><li>KickJS：Web的开源图形和游戏引擎</li><li>ClayGL：构建可扩展的Web3D应⽤程序</li><li>PlayCanvas：网络游戏和3D图形引擎</li><li>WebGLStudio.js和Litescene.js：开源Web 3D图形编辑器和创建器</li><li>Luma：Uber的3D WebGL可视化库</li><li>A-Frame是用于构建VR（虚拟现实）体验的Web框架</li></ol><h2 id="_6-canvas和webgl的区别" tabindex="-1"><a class="header-anchor" href="#_6-canvas和webgl的区别" aria-hidden="true">#</a> 6. canvas和webgl的区别</h2><h3 id="_1-canvas-画布" tabindex="-1"><a class="header-anchor" href="#_1-canvas-画布" aria-hidden="true">#</a> 1. <code>&lt;canvas&gt;</code>画布</h3><ul><li><code>&lt;canvas&gt;&lt;/canvas&gt;</code> 是HTML5新增的一个 DOM 元素 用途：显示 二维 和 三维 的图像</li><li>绘制：二维图形可以使用 （Canvas API 或 WebGL API）三维图形使用 WebGL API</li></ul><h3 id="_2-canvas-api" tabindex="-1"><a class="header-anchor" href="#_2-canvas-api" aria-hidden="true">#</a> 2. Canvas API</h3><ul><li>Canvas API 提供 二维 绘图的方式</li><li>图形的绘制主要通过  CanvasRenderingContext2D 接口完成</li><li>canvas.getContext(&#39;2d&#39;)</li></ul><h3 id="_3-webgl-api" tabindex="-1"><a class="header-anchor" href="#_3-webgl-api" aria-hidden="true">#</a> 3. WebGL API</h3><ul><li>WebGL API 提供 三维 绘图的方式</li><li>图形的绘制主要通过  WebGLRenderingContext 接口完成</li><li>canvas.getContext(&#39;webgl&#39;)</li></ul><h3 id="_4-webgl2renderingcontext" tabindex="-1"><a class="header-anchor" href="#_4-webgl2renderingcontext" aria-hidden="true">#</a> 4. WebGL2RenderingContext</h3><p>canvas.getContext(&#39;webgl2&#39;)</p>',20),t=[r];function d(h,c){return a(),l("div",null,t)}const b=e(n,[["render",d],["__file","001.html.vue"]]);export{b as default};
