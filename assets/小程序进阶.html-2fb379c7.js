import{_ as t,r as e,o,c as l,b as n,d as s,e as i,a}from"./app-9d6e6088.js";const c={},u=a(`<h1 id="小程序进阶" tabindex="-1"><a class="header-anchor" href="#小程序进阶" aria-hidden="true">#</a> 小程序进阶</h1><h2 id="自定义组件" tabindex="-1"><a class="header-anchor" href="#自定义组件" aria-hidden="true">#</a> 自定义组件</h2><ul><li><p>创建组件</p><ul><li>更目录创建components 创建 test文件夹</li><li>右键test创建components</li></ul></li><li><p>引入组件</p><ul><li>局部<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// .json 引入组件</span>
    <span class="token string-property property">&quot;usingComponents&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;mytest&quot;</span><span class="token operator">:</span> <span class="token string">&quot;components/test/test&quot;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// .wxml页面中使用组件</span>
    <span class="token operator">&lt;</span>mytest<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>mytest<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>全局<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// app.json 引入组件</span>
    <span class="token string-property property">&quot;window&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;usingComponents&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;mytest&quot;</span><span class="token operator">:</span> <span class="token string">&quot;components/test/test&quot;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// .wxml 需要的页面中使用组件</span>
    <span class="token operator">&lt;</span>mytest<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>mytest<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>组件与页面的区别</p><ul><li>组件json需要申明 &quot;component&quot;: true 属性</li><li>组件js需要调用Component()函数</li><li>组件的事件需要定义在 methods 方法中</li></ul></li><li><p>组件样式隔离</p><ol><li>id、属性、标签选择器不受隔离影响 （ 不建议使用 ）</li><li>class选择器受组件样式影响 （ 建议使用 ）</li><li>修改组件样式隔离选项 <ul><li>isolated 启用隔离 不互相影响</li><li>apply-shared 外界影响组件 组件不影响外界 （ 单向 ）</li><li>shared 外界影响组件 组件影响外界 （ 双向 ）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// 在.js中控制</span>
    <span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">styleIsolation</span><span class="token operator">:</span> <span class="token string">&#39;isolated&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// 在json中控制</span>
    <span class="token string-property property">&quot;styleIsolation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;isolated&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>properties属性</p><ul><li>data 私有数据</li><li>properties 外界传入数据 （ 可读可写 也可以使用 this.setData() 更新数据 ）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// .wxml文件</span>
    <span class="token operator">&lt;</span>mytest max<span class="token operator">=</span><span class="token string">&#39;10&#39;</span> min<span class="token operator">=</span><span class="token string">&#39;1&#39;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>mytest<span class="token operator">&gt;</span>
    <span class="token comment">// .js 文件</span>
    <span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token comment">// 完整类型</span>
                <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token comment">// 数据类型</span>
                <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>      <span class="token comment">// 默认值</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">min</span><span class="token operator">:</span> Number       <span class="token comment">// 简写</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>数据监听器</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">observers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;n1, n2&#39;</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">num</span><span class="token operator">:</span> n1 <span class="token operator">+</span> n2
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>纯数据字段</p><ul><li>pureDataPattern : 正则</li><li>仅在当前组件页面使用 不用于渲染界面的data字段 提高页面更新性能</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">optons</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">pureDataPattern</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^_</span><span class="token regex-delimiter">/</span></span> <span class="token comment">// 以_开头的都纯数据字段</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">_rgb</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">r</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">g</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span> <span class="token comment">// 纯数据字段</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>组件生命周期</p><ul><li>created 组件实例刚创建时执行 （*）</li><li>attached 组件实例进入页面节点树时执行 （*）</li><li>ready 视图布局完成执行</li><li>moved 组件实例被移动到节点数另一个位置时执行</li><li>detached 组件实例从页面节点树移除时执行 （*）</li><li>error 组件方法抛出错误时执行</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// 旧</span>
    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">attached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">detached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token comment">// 新 ( 推荐使用 )</span>
    <span class="token literal-property property">lifetimes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">attached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">detached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 新旧同时存在 新的优先级高 执行新的生命周期</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>pageLifetimes 监听组件页面的生命周期<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token function">pageLifetimes</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">show</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 页面显示</span>
        <span class="token function-variable function">hide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 页面隐藏</span>
        <span class="token function-variable function">resize</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 页面尺寸变化</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>插槽</p><ul><li>单个插槽</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token comment">&lt;!-- .wxml text4 组件使用者 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text4</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span> 这是slot插槽占位 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text4</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- .wxml text4 组件 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>多个插槽</p><ul><li>multipleSlots 启用多个插槽</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">multipleSlots</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用多个插槽</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token comment">&lt;!-- .wxml text4 组件使用者 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text4</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>a<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> 这是slot a插槽占位 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>b<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span> 这是slot b插槽占位 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text4</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- .wxml text4 组件 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>a<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>b<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>组件通信</p><ul><li>父子 <ol><li><p>属性绑定 父 -&gt; 子</p><ul><li>不能传递方法</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// 父组件</span>
    <span class="token operator">&lt;</span>text count<span class="token operator">=</span><span class="token string">&#39;{{ 10 }}&#39;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>text<span class="token operator">&gt;</span>
    <span class="token comment">// text 子组件</span>
    <span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>事件绑定 子 -&gt; 父</p><ul><li>可以传递任何类型数据 <ol><li>父组件自定义函数 syncCount</li><li>父组件自定义事件 bindsync=&#39;syncCount&#39; 或者 bind:sync=&#39;syncCount&#39;</li><li>子组件 this.triggerEvent(&#39;自定义事件名称&#39;, {})</li><li>e.detail获取子组件传递过来的值</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token function">syncCount</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>detail<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>获取组件实例</p><ul><li>this.selectComponent(&#39;id或者class选择器&#39;)</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
    <span class="token comment">// 父组件</span>
    <span class="token operator">&lt;</span>Child <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&#39;a&#39;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Child<span class="token operator">&gt;</span> <span class="token comment">// 子组件</span>
    <span class="token comment">// 在父组件中使用 子组件的变量或者方法</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">selectComponent</span><span class="token punctuation">(</span><span class="token string">&#39;.a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li></ul></li><li><p>behaviors</p><ul><li>共享代码 类似 mixin</li><li>组件引入多个 behaviors， behaviors可以相互引用</li><li>Behavior 定义共享的behaviors实例对象</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">Behavior</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">// 属性节点</span>
        <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// 私有节点</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// 事件处理方法</span>
        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// 共享代码 behaviors</span>
        <span class="token literal-property property">behaviors</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token comment">// ...组件生命周期</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token operator">-</span> 根目录
        <span class="token operator">-</span> behaviors
            <span class="token operator">-</span> my<span class="token operator">-</span>behaviors<span class="token punctuation">.</span>js

    <span class="token comment">// 在组件中导入</span>
    <span class="token keyword">const</span> myBehaviors <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;..behaviors/my-behaviors.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">behaviors</span><span class="token operator">:</span> <span class="token punctuation">[</span> myBehaviors <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>同名字段重合与组合规则 <ul><li>对象类型 对象合并</li><li>费对象类型 组件 &gt; 父behaviors &gt; 子behaviors</li><li>查询小程序官方说明</li></ul></li></ul></li></ul><h2 id="使用npm" tabindex="-1"><a class="header-anchor" href="#使用npm" aria-hidden="true">#</a> 使用npm</h2>`,4),r=n("li",null,[n("p",null,"限制"),n("ol",null,[n("li",null,"不支持依赖于 node.js内置库的包"),n("li",null,"不支持依赖于 浏览器内置对象的包"),n("li",null,"不支持依赖于 C++插件的包"),n("li",null,"每安装一个npm文件 都要构建一下（ 每次构建建议先删除miniprogram_npm 在构建 ）")])],-1),d={href:"https://vant-contrib.gitee.io/vant-weapp/#/quickstart",target:"_blank",rel:"noopener noreferrer"},k=a(`<h2 id="小程序api-promise化" tabindex="-1"><a class="header-anchor" href="#小程序api-promise化" aria-hidden="true">#</a> 小程序API Promise化</h2><ul><li>解决回调地狱问题 提高代码可读性、可维护性</li><li>miniprogram-api-promise@1.0.4</li><li>在小程序入口文件定义<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token keyword">var</span> <span class="token punctuation">{</span> promiseifAll <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;miniprogram-api-promise&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> wxp <span class="token operator">=</span> wx<span class="token punctuation">.</span>p <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token function">promiseifAll</span><span class="token punctuation">(</span>wx<span class="token punctuation">,</span> wxp<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token keyword">async</span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">await</span> wx<span class="token punctuation">.</span>p<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="全局数据共享" tabindex="-1"><a class="header-anchor" href="#全局数据共享" aria-hidden="true">#</a> 全局数据共享</h2><ul><li><p>mobx-miniprogram@4.13.2 配合 mobx-miniprogram-bindings@1.2.1</p><ul><li>mobx-miniprogram 创建 Store 实例对象</li><li>mobx-miniprogram-bindings 把Store中的共享数据或方法，绑定到组件或者页面中使用</li></ul></li><li><p>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    - 根目录
        - store
            store.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// store.js</span>
    <span class="token keyword">import</span> <span class="token punctuation">{</span> observable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;mobx-miniprogram&#39;</span><span class="token punctuation">;</span>

    <span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">observable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">// 变量</span>
        <span class="token literal-property property">numA</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token literal-property property">numB</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>

        <span class="token comment">// 计算属性</span>
        <span class="token keyword">get</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numA <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numB<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>

        <span class="token comment">// actions 方法</span>
        <span class="token literal-property property">asyncNum1</span><span class="token operator">:</span> <span class="token function">actions</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>numA <span class="token operator">+=</span> step<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">asyncNum2</span><span class="token operator">:</span> <span class="token function">actions</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>numB <span class="token operator">+=</span> step<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// store.js 绑定到页面中</span>
    <span class="token keyword">import</span> <span class="token punctuation">{</span> createStorBindings <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;mobx-miniprogram-bindings&#39;</span>
    <span class="token keyword">import</span> <span class="token punctuation">{</span> store <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../store/store.js&#39;</span>

    <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>storeBindings <span class="token operator">=</span> <span class="token function">createStorBindings</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                store<span class="token punctuation">,</span>
                <span class="token comment">// fields: [&#39;numA&#39;, &#39;numB&#39;, &#39;sum&#39;], 使用方式1</span>
                <span class="token literal-property property">fields</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 使用方式2</span>
                    <span class="token literal-property property">numA</span><span class="token operator">:</span> <span class="token string">&#39;numA&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">numB</span><span class="token operator">:</span> <span class="token string">&#39;numB&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">sum</span><span class="token operator">:</span> <span class="token string">&#39;sum&#39;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token comment">// actions: [&#39;asyncNum1&#39;, &#39;asyncNum2&#39;] 使用方式1</span>
                <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 使用方式2</span>
                    <span class="token literal-property property">asyncNum1</span><span class="token operator">:</span> <span class="token string">&#39;asyncNum1&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">asyncNum2</span><span class="token operator">:</span> <span class="token string">&#39;asyncNum2&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onUnload</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>storeBindings<span class="token punctuation">.</span><span class="token function">destroyStoreBindings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 在页面中使用 store.js</span>
    <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> numA <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>button bindtap<span class="token operator">=</span><span class="token string">&#39;btn&#39;</span> data<span class="token operator">-</span>step<span class="token operator">=</span><span class="token string">&#39;{{ 1 }}&#39;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>

    <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onUnload</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">btn</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">asyncNum1</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>step<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="分包" tabindex="-1"><a class="header-anchor" href="#分包" aria-hidden="true">#</a> 分包</h2><ul><li><p>好处</p><ul><li>优化首次启动下载时间</li><li>多团队共同开发可以更好地解耦写作</li><li>总共体积不超过16M 单个不超过2M</li><li>subpackages 配置分包</li></ul></li><li><p>构成</p><ul><li>一个主包 + 多个分包</li><li>主包 包含启动页面 TabBar页面 公共资源 （优先下载）</li><li>分包 当前包有关页面和私有资源 （需要依赖主包才能运行） （进入后在下载）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token operator">-</span> 根目录
        <span class="token operator">-</span> app<span class="token punctuation">.</span>js
        <span class="token operator">-</span> app<span class="token punctuation">.</span>json
        <span class="token operator">-</span> app<span class="token punctuation">.</span>wxss
        <span class="token operator">-</span> pages
        <span class="token operator">-</span> pagesA
        <span class="token operator">-</span> pagesB
        <span class="token operator">-</span> pagesC

    <span class="token comment">// 在 app.json中配置</span>
    <span class="token string-property property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 主包</span>
    <span class="token string-property property">&quot;subpackages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">// 分包</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;root&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pageA&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 分包入口</span>
            <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p1&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 分包别名</span>
            <span class="token string-property property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;pages/homeA/homeA&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;pages/homeB/homeB&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>打包原则</p><ul><li>subpackages 之外的目录会被打包到主包</li><li>主包是最外层的 pages</li><li>tabBar 必须在主包内</li><li>分包之间不能相互嵌套</li></ul></li><li><p>引用原则</p><ul><li>主包不能引用分包资源</li><li>分包不能互相引用私有资源</li><li>分包可以引用主包共有资源</li></ul></li><li><p>独立分包</p><ul><li>不下载主包情况下 独立运行 （提升分包页面的启动速度）</li><li>一个小程序中可以有多个独立分包</li><li>独立分包不能使用主包与分包任何资源</li><li>independent （ true 开启独立分包 ）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// 在 app.json中配置</span>
    <span class="token string-property property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 主包</span>
    <span class="token string-property property">&quot;subpackages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">// 分包</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;root&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pageA&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 分包入口</span>
            <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p1&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 分包别名</span>
            <span class="token string-property property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;pages/homeA/homeA&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;pages/homeB/homeB&quot;</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;independent&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>分包预下载</p><ul><li>会在进入指定页面时触发</li><li>同一页面共同享有预下载限额2M</li><li>preloadRule 定义分包预下载</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// 在 app.json中配置</span>
    <span class="token string-property property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 主包</span>
    <span class="token string-property property">&quot;preloadRule&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;pages/home/home&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>p1<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 包路径 ： 需要下载的分包</span>
        <span class="token string-property property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span> <span class="token comment">// 设置什么网络环境下开启下载</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="自定义tabbar" tabindex="-1"><a class="header-anchor" href="#自定义tabbar" aria-hidden="true">#</a> 自定义tabBar</h2><pre><code>- custom ( true 开启自定义tabBar )
- 配置过程
    [自定义tabBar](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/custom-tabbar.html)
</code></pre>`,8);function v(m,b){const p=e("ExternalLinkIcon");return o(),l("div",null,[u,n("ul",null,[r,n("li",null,[n("p",null,[s("Vant Weapp 小程序组件库 "),n("a",d,[s('"Vant Weapp官网"'),i(p)])])])]),k])}const y=t(c,[["render",v],["__file","小程序进阶.html.vue"]]);export{y as default};
