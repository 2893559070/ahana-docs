import{_ as a,M as t,p,q as e,R as n,t as o,N as c,a1 as i}from"./framework-5866ffd3.js";const l={},u=i(`<h1 id="生成-pdf-文档" tabindex="-1"><a class="header-anchor" href="#生成-pdf-文档" aria-hidden="true">#</a> 生成 PDF 文档</h1><p>PDF（便携式文件格式，Portable Document Format）是由 Adobe Systems 在 1993 年用于文件交换所发展出的文件格式。在浏览器端，利用一些现成的开源库，比如 jsPDF，我们也可以方便地生成 PDF 文档。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm install pdfjs<span class="token operator">-</span>dist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="引入" tabindex="-1"><a class="header-anchor" href="#引入" aria-hidden="true">#</a> 引入</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token constant">PDFJS</span> <span class="token keyword">from</span> <span class="token string">&#39;pdfjs-dist&#39;</span>
<span class="token constant">PDFJS</span><span class="token punctuation">.</span>GlobalWorkerOptions<span class="token punctuation">.</span>workerSrc <span class="token operator">=</span> <span class="token string">&#39;pdfjs-dist/build/pdf.worker.js&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><ul><li>getDocument()：用于异步获取PDf文档，发送多个Ajax请求以块的形式下载文档。它返回一个Promise，该Promise的成功回调传递一个对象，该对象包含PDF文档的-信息，该回调中的代码将在完成PDf文档获取时执行。</li><li>getPage()：用于获取PDF文档中的各个页面。</li><li>getViewport()：针对提供的展示比例，返回PDf文档的页面尺寸。</li><li>render()：渲染PDF。</li></ul><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><h3 id="渲染pdf" tabindex="-1"><a class="header-anchor" href="#渲染pdf" aria-hidden="true">#</a> 渲染PDF</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>  <span class="token comment">&lt;!-- 首先，我们需要在HTML中添加&lt;canvas&gt;元素以渲染PDF --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pdf-canvas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- 然后添加渲染PDF的js代码： --&gt;</span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&#39;Helloworld.pdf&#39;</span><span class="token punctuation">;</span>

    <span class="token constant">PDFJS</span><span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pdf</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> pdf<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">page</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 设置展示比例</span>
        <span class="token keyword">var</span> scale <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取pdf尺寸</span>
        <span class="token keyword">var</span> viewport <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取需要渲染的元素</span>
        <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;pdf-canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> viewport<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
        canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> viewport<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
        
        <span class="token keyword">var</span> renderContext <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">canvasContext</span><span class="token operator">:</span> context<span class="token punctuation">,</span>
            <span class="token literal-property property">viewport</span><span class="token operator">:</span> viewport
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        
        page<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>renderContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 现在，PDF已经成功渲染在界面上了。我们来分析一下使用到的函数：</span>

  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="渲染pdf复制" tabindex="-1"><a class="header-anchor" href="#渲染pdf复制" aria-hidden="true">#</a> 渲染PDF复制</h3><p>使用Text-Layers渲染 PDF.js支持在使用Canvas渲染的PDF页面上渲染文本图层。然而，这个功能需要用到额外的两个文件：text_layer_builder.js和text_layer_builder.css。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> TextLayerBuilder <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pdfjs-dist/web/pdf_viewer&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;pdfjs-dist/web/pdf_viewer.css&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>开始</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 创建渲染需要用到DOM节点 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- div#container为最外层节点，在该div中，我们会为PDF的每个页面创建自己的div，在每个页面的div中，都会有Canvas元素。 --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
 <span class="token keyword">var</span> container<span class="token punctuation">,</span> pageDiv<span class="token punctuation">;</span>

 <span class="token keyword">function</span> <span class="token function">getPDF</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token constant">PDFJS</span><span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pdf</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
         pdfDoc <span class="token operator">=</span> pdf<span class="token punctuation">;</span>
         container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;container&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span> pdf<span class="token punctuation">.</span>numPages<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token function">renderPDF</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">function</span> <span class="token function">renderPDF</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token constant">PDFJS</span><span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">page</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
         <span class="token keyword">var</span> scale <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">;</span>
         <span class="token keyword">var</span> viewport <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getViewport</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span><span class="token punctuation">;</span>
         pageDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         pageDiv<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;page-&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>pageIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         pageDiv<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;position: relative&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>pageDiv<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         pageDiv<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> viewport<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
         canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> view<span class="token punctuation">.</span>width<span class="token punctuation">;</span>
         
         <span class="token keyword">var</span> renderContext <span class="token operator">=</span> <span class="token punctuation">{</span>
             <span class="token literal-property property">canvasContext</span><span class="token operator">:</span> context<span class="token punctuation">,</span>
             <span class="token literal-property property">viewport</span><span class="token operator">:</span> viewport
         <span class="token punctuation">}</span><span class="token punctuation">;</span>
         
         page<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>renderContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上代码只是实现了多页渲染，接下来，开始渲染文本图层。我们需要将page.render(renderContext)修改为以下代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> page<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>renderContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> page<span class="token punctuation">.</span><span class="token function">getTextContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">textContent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     <span class="token comment">// 创建文本图层div</span>
     <span class="token keyword">const</span> textLayerDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     textLayerDiv<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;textLayer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment">// 将文本图层div添加至每页pdf的div中</span>
     pageDiv<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>textLayerDiv<span class="token punctuation">)</span><span class="token punctuation">;</span>
     
     <span class="token comment">// 创建新的TextLayerBuilder实例</span>
     <span class="token keyword">var</span> textLayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextLayerBuilder</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
         <span class="token literal-property property">textLayerDiv</span><span class="token operator">:</span> textLayerDiv<span class="token punctuation">,</span>
         <span class="token literal-property property">pageIndex</span><span class="token operator">:</span> page<span class="token punctuation">.</span>pageIndex<span class="token punctuation">,</span>
         <span class="token literal-property property">viewport</span><span class="token operator">:</span> viewport
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
     textLayer<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>textContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
     
     textLayer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键函数</p><ul><li>page.render()：该函数返回一个当PDF页面成功渲染到界面上时解析的promise，我们可以使用成功回调来渲染文本图层。</li><li>page.getTextContent()：该函数的成功回调会返回PDF页面上的文本片段。</li><li>TextLayerBuilder：该类的实例有两个重要的方法。setTextContent()用于设置page.getTextContent()函数返回的文本片段；render()用于渲染文本图层。</li></ul><h2 id="在网页中加载并显示pdf" tabindex="-1"><a class="header-anchor" href="#在网页中加载并显示pdf" aria-hidden="true">#</a> 在网页中加载并显示PDF</h2><p>把项目部署到nginx或者IIS，直接在浏览器中访问viewer.html即可预览我们的pdf</p><ul><li>当文件和viewer.html不同路径时（千万注意文件路径，否则无法正常预览）</li><li>当文件为远程服务器上的文件，我们有文件的路径时，需要将http路径进行转码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">// 方式一 本地</span>
  window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;./js/pdfJS/web/viewer.html?file=AngularJS权威指南.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 方式二 服务器</span>
  <span class="token comment">// viewer.html 路径 （服务器下的viewer.html）  ?  文件名</span>
  <span class="token keyword">let</span> fileUrl <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token string">&#39;http://10.162.201.40:8005/dev/leck/2022/0215/11_.122qqq_1_092319.pdf&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 将路径转码</span>
  window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://10.162.201.40:8005/dev?file=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 方式三 createObjectURL不支持IE11</span>
  <span class="token keyword">const</span> downloadHref <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>
  window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./js/pdfJS/web/viewer.html?file=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>downloadHref<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),r={href:"http://mozilla.github.io/pdf.js/",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const s=t("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[n("a",r,[o("更加深入了解PDF.js || 下载文件"),c(s)])])])}const b=a(l,[["render",k],["__file","PDF文档.html.vue"]]);export{b as default};
