import{_ as c,M as r,p as d,q as u,R as e,t as l,N as a,V as s,a1 as i}from"./framework-5866ffd3.js";const p={},f=e("h1",{id:"kubernetes-k8s",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#kubernetes-k8s","aria-hidden":"true"},"#"),l(" Kubernetes（k8s）")],-1),m=e("h2",{id:"学习计划",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#学习计划","aria-hidden":"true"},"#"),l(" 学习计划")],-1),h=["src"],b=e("h2",{id:"知识点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#知识点","aria-hidden":"true"},"#"),l(" 知识点")],-1),v=e("li",null,"Pod: k8s最小部署单元，一组容器的集合",-1),k=e("li",null,"Deployment: 最常见的控制器，用于更高几倍部署和管理Pod",-1),_=e("li",null,"Service: 为一组Pod提供负载均衡，对外提供统一访问入口",-1),g=["src"],y=e("h2",{id:"集群组件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#集群组件","aria-hidden":"true"},"#"),l(" 集群组件")],-1),x=e("h3",{id:"架构图",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#架构图","aria-hidden":"true"},"#"),l(" 架构图")],-1),P=["src"],w=i('<h3 id="master组件" tabindex="-1"><a class="header-anchor" href="#master组件" aria-hidden="true">#</a> Master组件</h3><ul><li>kube-apiserver <ul><li>Kubernetes APl,集群的统⼀⼊⼝，各组件协调者，以RESTful API提供接⼝服务，所有对象资源的增改查和监听操作都交给APIServer处理后再提交给Etcd存储</li></ul></li><li>kube-controller-manager <ul><li>处理集群中常规后台任务，⼀个资源对应⼀个控制器，⽽ControllerManagers就是负责管理这些控制器的。例如Deployment、Service</li></ul></li><li>kube-scheduler <ul><li>根据调度算法为新建的Pod选择⼀个Node节点，可以任意部署，可以部署在同⼀个节点上，也可以部署在不同的节点上</li></ul></li><li>etcd <ul><li>分布式键值存储系统。⽤于保存集群状态数据，⽐如Pod、Service等对象信息</li></ul></li></ul><h3 id="node组件" tabindex="-1"><a class="header-anchor" href="#node组件" aria-hidden="true">#</a> Node组件</h3><ul><li>kubelet <ul><li>kubelet是Master在Node节点上的Agent,管理本机运⾏容器的⽣命周期，⽐如创建容器、Pod挂线数据卷、下载secret、获取容器和节点状态等⼯作。kubelet将每个Pod转换成⼀组容器</li></ul></li><li>kube-proxy <ul><li>在Node节点上实现Pod⽹络代理，组护⽹络规则和四层负载均衡⼯作</li></ul></li><li>第三⽅容器引擎，例如docker、containerd、podman容器引擎，运⾏容器</li></ul><h2 id="kubectl命令行管理工具" tabindex="-1"><a class="header-anchor" href="#kubectl命令行管理工具" aria-hidden="true">#</a> kubectl命令⾏管理⼯具</h2><h3 id="基础命令" tabindex="-1"><a class="header-anchor" href="#基础命令" aria-hidden="true">#</a> 基础命令</h3>',6),C=e("h3",{id:"部署命令",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#部署命令","aria-hidden":"true"},"#"),l(" 部署命令")],-1),S=e("h3",{id:"集群管理命令",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#集群管理命令","aria-hidden":"true"},"#"),l(" 集群管理命令")],-1),E=e("h3",{id:"故障诊断和调试命令",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#故障诊断和调试命令","aria-hidden":"true"},"#"),l(" 故障诊断和调试命令")],-1),O=e("h3",{id:"高级命令",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#高级命令","aria-hidden":"true"},"#"),l(" ⾼级命令")],-1),N=e("h3",{id:"设置命令",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#设置命令","aria-hidden":"true"},"#"),l(" 设置命令")],-1),A=e("h3",{id:"其他命令",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#其他命令","aria-hidden":"true"},"#"),l(" 其他命令")],-1),D={href:"https://kubernetes.io/zh-cn/docs/reference/kubectl/",target:"_blank",rel:"noopener noreferrer"},I=e("h2",{id:"安装步骤",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装步骤","aria-hidden":"true"},"#"),l(" 安装步骤")],-1),B={href:"https://www.bilibili.com/video/BV1aL411t7UF/?p=1",target:"_blank",rel:"noopener noreferrer"},F=i(`<li><p>关闭防⽕墙 #全部</p><ul><li>systemctl stop firewalld</li><li>systemctl disable firewalld</li></ul></li><li><p>关闭selinux #全部</p><ul><li>sed -i &#39;s/enforcing/disabled/&#39; /etc/selinux/config #永久</li><li>setenforce 0 #临时</li></ul></li><li><p>关闭swap #全部</p><ul><li>swapoff -a #临时</li><li>sudo sed -ri &#39;s/.<em>swap.</em>/#&amp;/&#39; /etc/fstab #永久</li></ul></li><li><p>根据规划设置主机名 #全部</p><ul><li>hostnamectl set-hostname</li></ul></li><li><p>在master添加hosts #master</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    <span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/hosts <span class="token operator">&lt;&lt;</span> EOF
        @master内⽹地址 k8s-master1
        @node内⽹地址 k8s-node1
        @node内⽹地址 k8s-node2
    EOF
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将桥接的IPv4流量传递到iptables的链 #全部</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    <span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/sysctl.d/k8s.conf <span class="token operator">&lt;&lt;</span> EOF
        net.bridge.bridge-nf-call-ip6tables <span class="token operator">=</span> <span class="token number">1</span>
        net.bridge.bridge-nf-call-iptables <span class="token operator">=</span> <span class="token number">1</span>
    EOF
    <span class="token function">sysctl</span> <span class="token parameter variable">--system</span> <span class="token comment">#⽣效</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>时间同步 #全部</p><ul><li>yum install ntpdate -y</li><li>ntpdate time.windows.com</li></ul></li>`,7),K=e("p",null,"安装Docker #全部",-1),R=e("li",null,"安装命令1：curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun",-1),z=e("li",null,[l("安装命令2 "),e("ul",null,[e("li",null,"wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O"),e("li",null,"yum -y install docker-ce"),e("li",null,"systemctl enable docker && systemctl start docker")])],-1),L=e("li",null,"配置镜像下载加速器：自己的阿里云镜像服务找",-1),M={href:"https://blog.csdn.net/burgerh/article/details/123098751",target:"_blank",rel:"noopener noreferrer"},V=i(`<li>解决⽅法： <ol><li>执⾏如下命令先将之前的yum⽂件备份： <ul><li>rename &#39;.repo&#39; &#39;.repo.bak&#39; /etc/yum.repos.d/*.repo</li></ul></li><li>运⾏以下命令下载最新的repo⽂件：<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    <span class="token function">wget</span> https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo <span class="token parameter variable">-O</span> /etc/yum.repos.d/Centos-vault-8.5.2111.repo

    <span class="token function">wget</span> https://mirrors.aliyun.com/repo/epel-archive-8.repo <span class="token parameter variable">-O</span> /etc/yum.repos.d/epel-archive-8.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>运⾏以下命令替换repo⽂件中的链接：<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    <span class="token function">sed</span> <span class="token parameter variable">-i</span>
    <span class="token string">&#39;s/mirrors.cloud.aliyuncs.com/url_tmp/g&#39;</span>
    /etc/yum.repos.d/Centos-vault-
    <span class="token number">8.5</span>.2111.repo <span class="token operator">&amp;&amp;</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span>
    <span class="token string">&#39;s/mirrors.aliyun.com/mirrors.cloud.aliyu
    ncs.com/g&#39;</span> /etc/yum.repos.d/Centos-vault-8.5.2111.repo <span class="token operator">&amp;&amp;</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span>
    <span class="token string">&#39;s/url_tmp/mirrors.aliyun.com/g&#39;</span>
    /etc/yum.repos.d/Centos-vault-
    <span class="token number">8.5</span>.2111.repo

    <span class="token function">sed</span> <span class="token parameter variable">-i</span>
    <span class="token string">&#39;s/mirrors.aliyun.com/mirrors.cloud.aliyu
    ncs.com/g&#39;</span> /etc/yum.repos.d/epel-archive-8.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>运⾏以下命令重新创建缓存,若没报错,则正常了 <ul><li>yum clean all &amp;&amp; yum makecache</li></ul></li></ol></li>`,1),U=i(`<li><p>添加阿⾥云YUM软件源 #全部</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    <span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/yum.repos.d/kubernetes.repo <span class="token operator">&lt;&lt;</span> EOF
        <span class="token punctuation">[</span>kubernetes<span class="token punctuation">]</span>
        <span class="token assign-left variable">name</span><span class="token operator">=</span>Kubernetes
        <span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
        <span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
        <span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
        <span class="token assign-left variable">repo_gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
        <span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg
        https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
    EOF
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装kubeadm，kubelet和kubectl#全部</p></li>`,2),$=e("ul",null,[e("li",null,"由于版本更新频繁，这⾥指定版本号部署："),e("li",null,"yum install -y kubelet-1.20.0 #master #node"),e("li",null,"yum install -y kubeadm-1.20.0 #master #node"),e("li",null,"yum install -y kubectl-1.20.0 #master"),e("li",null,"systemctl enable kubelet #master #node")],-1),T=e("ol",{start:"11"},[e("li",null,"部署Kubernetes Master #master")],-1);function q(t,J){const n=r("font"),o=r("ExternalLinkIcon");return d(),u("div",null,[f,m,e("img",{src:t.$withBase("/k8s/zhishi/1.png"),alt:"foo"},null,8,h),b,e("ul",null,[v,k,_,e("li",null,[l("Label: 标签，附加到某个资源上，用于关联对象，查询和筛选 "),e("img",{src:t.$withBase("/k8s/zhishi/2.png"),alt:"foo"},null,8,g)])]),y,x,e("img",{src:t.$withBase("/k8s/zhishi/3.png"),alt:"foo"},null,8,P),w,e("ul",null,[e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("create")]),_:1}),l(" 通过⽂件名或标准输⼊创建资源")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("expose")]),_:1}),l(" 为Deployment，Pod创建Service")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("run")]),_:1}),l(" 在集群中运⾏⼀个特定的镜像")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("set")]),_:1}),l(" 在对象上设置特定的功能")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("explain")]),_:1}),l(" ⽂档参考资料")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("get")]),_:1}),l(" 显示⼀个或多个资源")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("edit")]),_:1}),l(" 使⽤系统编辑器编辑⼀个资源")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("delete")]),_:1}),l(" 通过⽂件名、标准输⼊、资源名称或标签选择器来删除资源")])]),C,e("ul",null,[e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("rollout")]),_:1}),l(" 管理Deployment，Daemonset资源的发布（例如状态、发布记录、回滚等）")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("scale")]),_:1}),l(" 对Deployment、ReplicaSet、RC或Job资源扩容或缩容Pod数量")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("autoscale")]),_:1}),l(" 为Deploy, RS, RC配置⾃动伸缩规则（依赖metrics-server和hpa）")])]),S,e("ul",null,[e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("certificate")]),_:1}),l(" 修改证书资源")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("cluster-info")]),_:1}),l(" 显示集群信息")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("top")]),_:1}),l(" 查看资源利⽤率（依赖metrics-server）")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("cordon")]),_:1}),l(" 标记节点不可调度")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("uncordon")]),_:1}),l(" 标记节点可调度")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("drain")]),_:1}),l(" 驱逐节点上的应⽤，准备下线维护")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("taint")]),_:1}),l(" 修改节点taint标记")])]),E,e("ul",null,[e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("describe")]),_:1}),l(" 显示资源详细信息")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("logs")]),_:1}),l(" 查看Pod内容器⽇志，如果Pod有多个容器，-c参数指定容器名称")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("attach")]),_:1}),l(" 附加到Pod内的⼀个容器")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("exec")]),_:1}),l(" 在容器内执⾏命令")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("port-forward")]),_:1}),l(" 为Pod创建本地端⼝映射")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("proxy")]),_:1}),l(" 为Kubernetes API server创建代理")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("cp")]),_:1}),l(" p 拷⻉⽂件或⽬录到容器中，或者从容器内向外拷⻉")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("auth")]),_:1}),l(" 检查授权")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("debug")]),_:1}),l(" 创建调试会话，⽤于排查⼯作负载和⼯作节点故障")])]),O,e("ul",null,[e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("diff")]),_:1}),l(" 将在线配置与指定的⽂件对⽐")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("apply")]),_:1}),l(" 从⽂件名或标准输⼊对资源创建/更新")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("patch")]),_:1}),l(" 使⽤补丁⽅式修改、更新资源的某些字段")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("replace")]),_:1}),l(" 从⽂件名或标准输⼊替换⼀个资源")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("kustomize")]),_:1}),l(" 从⽬录或者URL构建kustomization⽬标")])]),N,e("ul",null,[e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("label")]),_:1}),l(" 给资源设置、更新标签")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("annotate")]),_:1}),l(" 给资源设置、更新注解")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("completion")]),_:1}),l(" n kubectl⼯具⾃动补全，source<(kubectl completion bash) （依赖软件包 bash-completion）")])]),A,e("ul",null,[e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("api-resources")]),_:1}),l(" 查看所有资源")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("api-versions")]),_:1}),l(" 打印受⽀持的API版本")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("config")]),_:1}),l(" 修改kubeconfig⽂件（⽤于访问API，⽐如配置认证信息）")]),e("li",null,[a(n,{color:"#ffae37"},{default:s(()=>[l("version")]),_:1}),l(" 查看kubectl和k8s版本")])]),e("p",null,[e("a",D,[l("官方文档参考地址"),a(o)])]),I,e("p",null,[e("a",B,[l("视频链接"),a(o)])]),e("ol",null,[F,e("li",null,[K,e("ul",null,[R,z,L,e("li",null,[l("可能出现问题： "),e("ul",null,[e("li",null,[l("2022年1⽉1⽇起CentOS官⽅将不再对CentOS8提供服务⽀持，使⽤yum命令的时候报错：Cannot download repomd.xml，可"),e("a",M,[l("参考"),a(o)])])])]),V])]),U]),$,T])}const j=c(p,[["render",q],["__file","Kubernetes（k8s）.html.vue"]]);export{j as default};
