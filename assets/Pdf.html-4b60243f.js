import{_ as p,o as e,c as o,b as n,d as s,a as t}from"./app-9d6e6088.js";const c={},l=t('<h1 id="pdf" tabindex="-1"><a class="header-anchor" href="#pdf" aria-hidden="true">#</a> Pdf</h1><ul><li>概述 在企业级应用开发中，报表生成、报表打印下载是其重要的一个环节。在之前的课程中我们已经学习了报表中比较重要的一种：Excel报表。其实除了Excel报表之外，PDF报表也有广泛的应用场景，必须用户详细资料，用户简历等。</li><li>常见PDF报表的制作方式 <ol><li>iText PDF：iText是著名的开放项目，是用于生成PDF文档的一个java类库。通过iText不仅可以生成PDF或rtf的文档，而且可以将XML、Html文件转化为PDF文件。</li><li>Openoffice：openoffice是开源软件且能在windows和linux平台下运行，可以灵活的将word或者Excel转化为PDF文档。</li><li>Jasper Report：是一个强大、灵活的报表生成工具，能够展示丰富的页面内容，并将之转换成PDF</li></ol></li></ul><h2 id="jasperreport" tabindex="-1"><a class="header-anchor" href="#jasperreport" aria-hidden="true">#</a> JasperReport</h2><p>JasperReport是一个强大、灵活的报表生成工具，能够展示丰富的页面内容，并将之转换成PDF，HTML，或者XML格式。该库完全由Java写成，可以用于在各种Java应用程序，包括J2EE，Web应用程序中生成动态内容。只需要将JasperReport引入工程中即可完成PDF报表的编译、显示、输出等工作。</p><ul><li>在开源的JAVA报表工具中，JASPER Report发展是比较好的，比一些商业的报表引擎做得还好，如支持了十字交叉报表、统计报表、图形报表，支持多种报表格式的输出，如PDF、RTF、XML、CSV、XHTML、TEXT、DOCX以及OpenOffice。</li><li>数据源支持更多，常用 JDBC SQL查询、XML文件、CSV文件 、HQL（Hibernate查询），HBase，JAVA集合等。还允许你义自己的数据源，通过JASPER文件及数据源，JASPER就能生成最终用户想要的文档格式。</li></ul><h3 id="_1-jasperreport生命周期" tabindex="-1"><a class="header-anchor" href="#_1-jasperreport生命周期" aria-hidden="true">#</a> 1. JasperReport生命周期</h3><p>通常我们提到PDF报表的时候,浮现在脑海中的是最终的PDF文档文件。在JasperReports中，这只是报表生命周期的最后阶段。通过JasperReports生成PDF报表一共要经过三个阶段，我们称之为 JasperReport的生命周期，这三个阶段为：设计（Design）阶段、执行（Execution）阶段以及输出（Export）阶段，如下图所示：</p>',7),i=["src"],u=n("ol",null,[n("li",null,"设计阶段（Design）：所谓的报表设计就是创建一些模板，模板包含了报表的布局与设计，包括执行计算的 复杂公式、可选的从数据源获取数据的查询语句、以及其它的一些信息。模板设计完成之后，我们将模板保 存为JRXML文件（JR代表JasperReports）,其实就是一个XML文件。"),n("li",null,"执行阶段（Execution）：使用以JRXML文件编译为可执行的二进制文件（即.Jasper文件）结合数据进行执 行，填充报表数据"),n("li",null,"输出阶段（Export）：数据填充结束，可以指定输出为多种形式的报表")],-1),r=n("h3",{id:"_2-jasperreport原理简述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-jasperreport原理简述","aria-hidden":"true"},"#"),s(" 2. JasperReport原理简述")],-1),k=["src"],d=t('<ol><li>JRXML:报表填充模板，本质是一个XML. JasperReport已经封装了一个dtd，只要按照规定的格式写这个xml文件，那么jasperReport就可以将其解析最终生成报表，但是jasperReport所解析的不是我们常见的.xml文件，而是.jrxml文件，其实跟xml是一样的，只是后缀不一样。</li><li>Jasper:由JRXML模板编译生成的二进制文件，用于代码填充数据。解析完成后JasperReport就开始编译.jrxml文件，将其编译成.jasper文件，因为JasperReport只可以对.jasper文件进行填充数据和转换，这步操作就跟我们java中将java文件编译成class文件是一样的</li><li>Jrprint:当用数据填充完Jasper后生成的文件，用于输出报表。这一步才是JasperReport的核心所在，它会根据你在xml里面写好的查询语句来查询指定是数据库，也可以控制在后台编写查询语句，参数，数据库。在报表填充完后，会再生成一个.jrprint格式的文件（读取jasper文件进行填充，然后生成一个jrprint文件）</li><li>Exporter:决定要输出的报表为何种格式，报表输出的管理类。</li><li>Jasperreport可以输出多种格式的报表文件，常见的有Html,PDF,xls等</li></ol><h3 id="_3-开发流程概述" tabindex="-1"><a class="header-anchor" href="#_3-开发流程概述" aria-hidden="true">#</a> 3. 开发流程概述</h3><ul><li>制作报表模板</li><li>模板编译</li><li>构造数据</li><li>填充模板数据</li></ul><h2 id="模板工具jaspersoft-studio" tabindex="-1"><a class="header-anchor" href="#模板工具jaspersoft-studio" aria-hidden="true">#</a> 模板工具Jaspersoft Studio</h2><p>Jaspersoft Studio是JasperReports库和JasperReports服务器的基于Eclipse的报告设计器; 它可以作为Eclipse插件或作为独立的应用程序使用。Jaspersoft Studio允许您创建包含图表，图像，子报表，交叉表等的复杂布局。您可以通过JDBC，TableModels，JavaBeans，XML，Hibernate，大数据（如Hive），CSV，XML / A以及自定义来源等各种来源访问数据，然后将报告发布为PDF，RTF， XML，XLS，CSV，HTML，XHTML，文本，DOCX或OpenOffice。 Jaspersoft Studio 是一个可视化的报表设计工具,使用该软件可以方便地对报表进行可视化的设计，设计结果为格式.jrxml 的 XML 文件，并且可以把.jrxml 文件编译成.jasper 格式文件方便 JasperReport 报表引擎解析、显示。</p><h3 id="_1-安装配置" tabindex="-1"><a class="header-anchor" href="#_1-安装配置" aria-hidden="true">#</a> 1. 安装配置</h3><p>到JasperReport官网下载 https://community.jaspersoft.com/community-download 下载 Library Jar包（传统导入jar包工程需下载）和模板设计器Jaspersoft studio。并安装Jaspersoft studio，安装的过程比较简单，一直下一步直至安装成功即可。</p><h3 id="_2-面板介绍" tabindex="-1"><a class="header-anchor" href="#_2-面板介绍" aria-hidden="true">#</a> 2. 面板介绍</h3>',8),m=["src"],v=t('<ul><li>Report editing area （主编辑区域）中，您直观地通过拖动，定位，对齐和通过 Designer palette（设计器调色板）对报表元素调整大小。JasperSoft Studio 有一个多标签编辑器，Design,Source 和 Preview： <ul><li>Design tab：当你打开一个报告文件，它允许您以图形方式创建报表选中</li><li>Source tab： 包含用于报表的 JRXML 源代码。</li><li>Preview tab： 允许在选择数据源和输出格式后，运行报表预览。</li></ul></li><li>Repository Explorer view：包含 JasperServer 生成的连接和可用的数据适配器列表</li><li>Project Explorer view：包含 JasperReports 的工程项目清单</li><li>Outline view：在大纲视图中显示了一个树的形式的方式报告的完整结构。</li><li>Properties view：通常是任何基于 Eclipse 的产品/插件的基础之一。它通常被填充与实际所选元素的属性的信息。这就是这样，当你从主设计区域（即：一个文本字段）选择一个报表元素或从大纲，视图显示了它的信息。其中一些属性可以是只读的，但大部分都是可编辑的，对其进行修改，通常会通知更改绘制的元素（如：元素的宽度或高度）。</li><li>Problems view：显示的问题和错误，例如可以阻断报告的正确的编译。</li><li>Report state summary 提供了有关在报表编译/填充/执行统计用户有用的信息。错误会显示在这里</li></ul><h3 id="_3-基本使用" tabindex="-1"><a class="header-anchor" href="#_3-基本使用" aria-hidden="true">#</a> 3. 基本使用</h3>',2),b=n("p",null,"模板制作",-1),g=["src"],f=["src"],h=["src"],w=["src"],y=n("ul",null,[n("li",null,"Title(标题)：只在整个报表的第一页的最上端显示。只在第一页显示，其他页面均不显示。"),n("li",null,"Page Header(页头)：在整个报表中每一页都会显示。在第一页中，出现的位置在 Title Band的下面。在除了第一页的其他页面中Page Header 的内容均在页面的最上端显示。"),n("li",null,"Page Footer(页脚)：在整个报表中每一页都会显示。显示在页面的最下端。一般用来显示页码。"),n("li",null,"Detail 1(详细)：报表内容，每一页都会显示。"),n("li",null,"Column Header(列头)：Detail中打印的是一张表的话，这Column Header就是表中列的列头。"),n("li",null,"Column Footer(列脚)：Detail中打印的是一张表的话，这Column Footer就是表中列的列脚。"),n("li",null,"Summary(统计)：表格的合计段，出现在整个报表的最后一页中，在Detail 1 Band后面。主要是用来做报表的合计显示。")],-1),q=["src"],_=t(`<h3 id="_4-整合工程" tabindex="-1"><a class="header-anchor" href="#_4-整合工程" aria-hidden="true">#</a> 4. 整合工程</h3><ol><li>新建SpringBoot工程引入坐标<div class="language-maven line-numbers-mode" data-ext="maven"><pre class="language-maven"><code>   &lt;dependency&gt;
      &lt;groupId&gt;net.sf.jasperreports&lt;/groupId&gt;
      &lt;artifactId&gt;jasperreports&lt;/artifactId&gt;
      &lt;version&gt;6.5.0&lt;/version&gt;
  &lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>导入生成的.jasper文件、创建测试controller<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JasperController</span> <span class="token punctuation">{</span>
   <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testJasper&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createHtml</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span>
request<span class="token punctuation">)</span><span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
       <span class="token comment">//引入jasper文件。由JRXML模板编译生成的二进制文件，用于代码填充数据</span>
       <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;templates/test01.jasper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token comment">//加载jasper文件创建inputStream</span>
       <span class="token class-name">FileInputStream</span> isRef <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">ServletOutputStream</span> sosRef <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           <span class="token comment">//创建JasperPrint对象</span>
           <span class="token class-name">JasperPrint</span> jasperPrint <span class="token operator">=</span> <span class="token class-name">JasperFillManager</span><span class="token punctuation">.</span><span class="token function">fillReport</span><span class="token punctuation">(</span>isRef<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">JREmptyDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token comment">//写入pdf数据</span>
           <span class="token class-name">JasperExportManager</span><span class="token punctuation">.</span><span class="token function">exportReportToPdfStream</span><span class="token punctuation">(</span>jasperPrint<span class="token punctuation">,</span>sosRef<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
           sosRef<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           sosRef<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_4-中文处理" tabindex="-1"><a class="header-anchor" href="#_4-中文处理" aria-hidden="true">#</a> 4. 中文处理</h3>`,3),S=["src"],J=t(`<li>通过手动指定中文字体的形式解决中文不现实 <ul><li>添加properties文件：<div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">    net.sf.jasperreports.extension.registry.factory.simple.font.families</span><span class="token punctuation">=</span><span class="token value attr-value">net.sf.jasperreports.engine.fonts.SimpleFontExtensionsRegistryFactorynet.sf.jasperreports.extension.simple.font.families.lobstertwo=stsong/fonts.xml</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>指定中文配置文件fonts.xml<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fontFamilies</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fontFamily</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>华文宋体<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>normal</span><span class="token punctuation">&gt;</span></span>stsong/stsong.TTF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>normal</span><span class="token punctuation">&gt;</span></span>
           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bold</span><span class="token punctuation">&gt;</span></span>stsong/stsong.TTF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bold</span><span class="token punctuation">&gt;</span></span>
           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>italic</span><span class="token punctuation">&gt;</span></span>stsong/stsong.TTF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>italic</span><span class="token punctuation">&gt;</span></span>
           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boldItalic</span><span class="token punctuation">&gt;</span></span>stsong/stsong.TTF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>boldItalic</span><span class="token punctuation">&gt;</span></span>
           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pdfEncoding</span><span class="token punctuation">&gt;</span></span>Identity-H<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pdfEncoding</span><span class="token punctuation">&gt;</span></span>
           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pdfEmbedded</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pdfEmbedded</span><span class="token punctuation">&gt;</span></span>
           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exportFonts</span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>export</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.sf.jasperreports.html<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#39;华文宋体&#39;, Arial, Helvetica, sans-serif<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>export</span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>export</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>net.sf.jasperreports.xhtml<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&#39;华文宋体&#39;, Arial, Helvetica, sans-serif<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>export</span><span class="token punctuation">&gt;</span></span>
           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exportFonts</span><span class="token punctuation">&gt;</span></span>
           <span class="token comment">&lt;!--
           &lt;locales&gt;
               &lt;locale&gt;en_US&lt;/locale&gt;
               &lt;locale&gt;de_DE&lt;/locale&gt;
           &lt;/locales&gt;
           --&gt;</span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fontFamily</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fontFamilies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>引入字体库stsong.TTF</li></ul></li>`,1),R=t(`<h2 id="pdf报表" tabindex="-1"><a class="header-anchor" href="#pdf报表" aria-hidden="true">#</a> PDF报表</h2><h3 id="_1-数据填充" tabindex="-1"><a class="header-anchor" href="#_1-数据填充" aria-hidden="true">#</a> 1. 数据填充</h3><p>使用JasperReport来生成简单的文本报表，正式企业开发中动态数据展示也是报表中最重要的一环，接下来我们共同研究的就是填充动态数据到PDF报表中。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
* 填充数据构造JasperPrint
* is: 文件输入流
* parameters：参数
* dataSource：数据源
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">JasperPrint</span> <span class="token function">fillReport</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> is<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> parameters<span class="token punctuation">,</span> 
<span class="token class-name">JRDataSource</span> dataSource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">JRException</span> <span class="token punctuation">{</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过这段填充数据的源代码得知，JasperReport对报表模板中的数据填充有很多中方式，最典型的有以下两种：</p><ul><li>Parameters（参数）填充</li><li>DataSource（数据源）填充</li></ul><h4 id="_1-1-参数map填充数据" tabindex="-1"><a class="header-anchor" href="#_1-1-参数map填充数据" aria-hidden="true">#</a> 1.1 参数Map填充数据</h4><p>Parameters通常是用来在打印的时候从程序里传值到报表里。也就是说parameters通常的是起参数传递的作用。他们可以被用在一些特定的场合(比如应用中SQL 查询的条件),如report中任何一个需要从外部传入的变量等(如一个Image对象所包括的char或报表title的字符串)。parameters也需要在创建的时候定义它的数据类型。parameters的数据类型是标准的java的Object。</p>`,8),j=["src"],P=["src"],F=["src"],x=["src"],C=t(`<li>1.1.2 PDF输出<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>     <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testJasper02&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createPdf</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> 
<span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
       <span class="token comment">//1.引入jasper文件</span>
       <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;templates/parametersTest.jasper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token comment">//2.创建JasperPrint,向jasper文件中填充数据</span>
       <span class="token class-name">ServletOutputStream</span> os <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           <span class="token doc-comment comment">/**
            * parameters集合中传递的key需要和设计模板中使用的name一致
            */</span>
           <span class="token class-name">HashMap</span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           parameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;用户详情&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           parameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           parameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;companyName&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;你猜猜&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           parameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mobile&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;120&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           parameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;departmentName&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;猜猜你&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token class-name">JasperPrint</span> print <span class="token operator">=</span> <span class="token class-name">JasperFillManager</span><span class="token punctuation">.</span><span class="token function">fillReport</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span> parameters<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">JREmptyDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token comment">//3.将JasperPrint已PDF的形式输出</span>
           <span class="token class-name">JasperExportManager</span><span class="token punctuation">.</span><span class="token function">exportReportToPdfStream</span><span class="token punctuation">(</span>print<span class="token punctuation">,</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>
           response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JRException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
           os<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),B=n("h4",{id:"_1-2-数据源填充数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-2-数据源填充数据","aria-hidden":"true"},"#"),s(" 1.2 数据源填充数据")],-1),D=["src"],M=["src"],E=n("li",null,"（1）制作空白模板",-1),L=["src"],H=["src"],T=["src"],N=["src"],U=t(`<li>1.2.1.3 PDF输出<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>     <span class="token comment">//测试JDBC连接数据源</span>
   <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testJasper03&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createPdf</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> 
<span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
       <span class="token comment">//1.引入jasper文件</span>
       <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;templates/testConn.jasper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token comment">//2.创建JasperPrint,向jasper文件中填充数据</span>
       <span class="token class-name">ServletOutputStream</span> os <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           <span class="token doc-comment comment">/**
            * 1.jasper文件流
            * 2.参数列表
            * 3.数据库连接
            */</span>
           <span class="token class-name">HashMap</span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">JasperPrint</span> print <span class="token operator">=</span> <span class="token class-name">JasperFillManager</span><span class="token punctuation">.</span><span class="token function">fillReport</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span> 
parameters<span class="token punctuation">,</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token comment">//3.将JasperPrint已PDF的形式输出</span>
           <span class="token class-name">JasperExportManager</span><span class="token punctuation">.</span><span class="token function">exportReportToPdfStream</span><span class="token punctuation">(</span>print<span class="token punctuation">,</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>
           response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JRException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
           os<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
   <span class="token comment">//创建数据库Connection</span>
   <span class="token keyword">public</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
       <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost/ihrm&quot;</span><span class="token punctuation">;</span>
       <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> conn<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),$=["src"],I=["src"],O=t(`<li>1.2.2.2 PDF输出 <ul><li>（1）配置实体类<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>bean</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> mobile<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> companyName<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> departmentName<span class="token punctuation">;</span>
   <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> mobile<span class="token punctuation">,</span> <span class="token class-name">String</span> companyName<span class="token punctuation">,</span> <span class="token class-name">String</span>
departmentName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>mobile <span class="token operator">=</span> mobile<span class="token punctuation">;</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>companyName <span class="token operator">=</span> companyName<span class="token punctuation">;</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>departmentName <span class="token operator">=</span> departmentName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> id<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> username<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
 <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMobile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> mobile<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMobile</span><span class="token punctuation">(</span><span class="token class-name">String</span> mobile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>mobile <span class="token operator">=</span> mobile<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCompanyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> companyName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCompanyName</span><span class="token punctuation">(</span><span class="token class-name">String</span> companyName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>companyName <span class="token operator">=</span> companyName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getDepartmentName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> departmentName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDepartmentName</span><span class="token punctuation">(</span><span class="token class-name">String</span> departmentName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>departmentName <span class="token operator">=</span> departmentName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>（2）使用javaBean数据源<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>     <span class="token comment">//测试javaBean数据源</span>
   <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testJasper04&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createPdf</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> 
<span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
       <span class="token comment">//1.引入jasper文件</span>
       <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;templates/testJavaBean.jasper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token comment">//2.创建JasperPrint,向jasper文件中填充数据</span>
       <span class="token class-name">ServletOutputStream</span> os <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           <span class="token class-name">HashMap</span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token comment">//构造javaBean数据源</span>
           <span class="token class-name">JRBeanCollectionDataSource</span> ds <span class="token operator">=</span> <span class="token keyword">new</span>
<span class="token class-name">JRBeanCollectionDataSource</span><span class="token punctuation">(</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token doc-comment comment">/**
            * 1.jasper文件流
            * 2.参数列表
            * 3.JRBeanCollectionDataSource
            */</span>
           <span class="token class-name">JasperPrint</span> print <span class="token operator">=</span> <span class="token class-name">JasperFillManager</span><span class="token punctuation">.</span><span class="token function">fillReport</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span> parameters<span class="token punctuation">,</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token comment">//3.将JasperPrint已PDF的形式输出</span>
           <span class="token class-name">JasperExportManager</span><span class="token punctuation">.</span><span class="token function">exportReportToPdfStream</span><span class="token punctuation">(</span>print<span class="token punctuation">,</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>
           response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JRException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
           os<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
   <span class="token comment">//创建数据库Connection</span>
   <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;testName&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;10&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;企业&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;部门&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
           list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
       <span class="token keyword">return</span> list<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li>`,1),X=n("h3",{id:"_2-分组报表",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-分组报表","aria-hidden":"true"},"#"),s(" 2. 分组报表")],-1),A=n("p",null,"有两种情况会使用分组报表：",-1),G=n("ul",null,[n("li",null,"美观和好看的显示。"),n("li",null,"当数据分为两层表时，经常需要批量打印子表的数据。打印时，常常需要按照父表的外键或关联值进行自动分组，即每一条父表记录所属的子表记录打印到一组报表中，每组报表都单独计数及计算页数。 在应用中，可以通过选择需要打印的父表记录，将父表记录的 ID 传入，由报表自动进行分组。")],-1),V=n("h4",{id:"_1-设置分组属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-设置分组属性","aria-hidden":"true"},"#"),s(" 1. 设置分组属性")],-1),Q=n("li",null,"（1）新建模板 使用用户列表模板完成分组案例",-1),K=["src"],W=["src"],z=["src"],Y=["src"],Z=["src"],nn=n("h4",{id:"_2-添加分组band",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-添加分组band","aria-hidden":"true"},"#"),s(" 2. 添加分组Band")],-1),sn=["src"],an=t(`<h4 id="_3-pdf输出" tabindex="-1"><a class="header-anchor" href="#_3-pdf输出" aria-hidden="true">#</a> 3. PDF输出</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token comment">//测试分组</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testJasper05&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createPdf</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> 
<span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">//1.引入jasper文件</span>
        <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;templates/testGroup.jasper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.创建JasperPrint,向jasper文件中填充数据</span>
        <span class="token class-name">ServletOutputStream</span> os <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">HashMap</span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//构造javaBean数据源</span>
            <span class="token class-name">JRBeanCollectionDataSource</span> ds <span class="token operator">=</span> <span class="token keyword">new</span>
<span class="token class-name">JRBeanCollectionDataSource</span><span class="token punctuation">(</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token doc-comment comment">/**
             * 1.jasper文件流
             * 2.参数列表
             * 3.JRBeanCollectionDataSource
             */</span>
            <span class="token class-name">JasperPrint</span> print <span class="token operator">=</span> <span class="token class-name">JasperFillManager</span><span class="token punctuation">.</span><span class="token function">fillReport</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span> parameters<span class="token punctuation">,</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//3.将JasperPrint已PDF的形式输出</span>
            <span class="token class-name">JasperExportManager</span><span class="token punctuation">.</span><span class="token function">exportReportToPdfStream</span><span class="token punctuation">(</span>print<span class="token punctuation">,</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>
            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JRException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
            os<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
 <span class="token comment">//创建数据库Connection</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
     <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;ahana&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;haha&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;1380000000&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;你猜猜&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;猜猜他&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;ahana&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;haha&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;1880000000&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;他猜猜&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;猜猜他&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
        <span class="token keyword">return</span> list<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),tn=["src"],pn=n("h3",{id:"_3-chart图表",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-chart图表","aria-hidden":"true"},"#"),s(" 3. Chart图表")],-1),en=["src"],on=["src"],cn=n("li",null,"第一步：palette面板找到chart图表，拖拽到band中",-1),ln=["src"],un=["src"],rn=n("ul",null,[n("li",null,"Key： 圆饼图的内容是什么，也就是下面的 First，Second…的内容"),n("li",null,"Value：这个圆饼图的比例依据，根据 Value 属性来显示每个 Key 占的比例"),n("li",null,"Label：显示标签")],-1),kn=t(`<li>PDF输出 <ul><li>实体类<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserCount</span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> companyName<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">Integer</span> count<span class="token punctuation">;</span>
   <span class="token keyword">public</span> <span class="token class-name">UserCount</span><span class="token punctuation">(</span><span class="token class-name">String</span> companyName<span class="token punctuation">,</span> <span class="token class-name">Integer</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>companyName <span class="token operator">=</span> companyName<span class="token punctuation">;</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> count<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCompanyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> companyName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCompanyName</span><span class="token punctuation">(</span><span class="token class-name">String</span> companyName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>companyName <span class="token operator">=</span> companyName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> count<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>PDF输出<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">//测试图表</span>
   <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testJasper06&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createPdf</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> 
<span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
       <span class="token comment">//1.引入jasper文件</span>
       <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;templates/testChart.jasper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token comment">//2.创建JasperPrint,向jasper文件中填充数据</span>
       <span class="token class-name">ServletOutputStream</span> os <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           <span class="token class-name">HashMap</span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token comment">//parameters.put(&quot;userCountList&quot;,getUserList());</span>
           <span class="token comment">//构造javaBean数据源</span>
           <span class="token class-name">JRBeanCollectionDataSource</span> ds <span class="token operator">=</span> <span class="token keyword">new</span>
<span class="token class-name">JRBeanCollectionDataSource</span><span class="token punctuation">(</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token doc-comment comment">/**
            * 1.jasper文件流
            * 2.参数列表
            * 3.JRBeanCollectionDataSource
            */</span>
           <span class="token class-name">JasperPrint</span> print <span class="token operator">=</span> <span class="token class-name">JasperFillManager</span><span class="token punctuation">.</span><span class="token function">fillReport</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span> parameters<span class="token punctuation">,</span>ds<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token comment">//3.将JasperPrint已PDF的形式输出</span>
           <span class="token class-name">JasperExportManager</span><span class="token punctuation">.</span><span class="token function">exportReportToPdfStream</span><span class="token punctuation">(</span>print<span class="token punctuation">,</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>
           response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JRException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
           os<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
   <span class="token comment">//创建数据库Connection</span>
   <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserCount</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
       <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserCount</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">UserCount</span> uc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserCount</span><span class="token punctuation">(</span><span class="token string">&quot;传智播客&quot;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">UserCount</span> uc2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserCount</span><span class="token punctuation">(</span><span class="token string">&quot;黑马程序员&quot;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>uc1<span class="token punctuation">)</span><span class="token punctuation">;</span>
       list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>uc2<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> list<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li>`,1),dn=n("h3",{id:"_4-父子报表",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-父子报表","aria-hidden":"true"},"#"),s(" 4. 父子报表")],-1),mn=n("p",null,"复杂报表或数据内容较多的时候，可以使用子报表解决。",-1),vn=n("li",null,[n("p",null,"制作父报表 首先制作父报表，就是调用子报表的一个基础报表。主报表的作用有如下两种："),n("ul",null,[n("li",null,"父报表中需要显示数据，使用子报表弥补studio设计的不足"),n("li",null,"父报表不需要显示任何数据，只是作为子报表的载体。适用于复杂报表的设计")])],-1),bn=["src"],gn=["src"],fn=["src"],hn=n("li",null,[n("p",null,"代码")],-1),wn=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">//测试父子模板</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/testJasper07&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createPdf</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> 
    <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
           <span class="token comment">//1.引入jasper文件</span>
           <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;templates/main.jasper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token comment">//2.创建JasperPrint,向jasper文件中填充数据</span>
           <span class="token class-name">ServletOutputStream</span> os <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">try</span> <span class="token punctuation">{</span>
               <span class="token class-name">HashMap</span> parameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token class-name">Resource</span> subResource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;templates/sub-group.jasper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               parameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;subpath&quot;</span><span class="token punctuation">,</span>subResource<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               parameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;sublist&quot;</span><span class="token punctuation">,</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               parameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;sublist&quot;</span><span class="token punctuation">,</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token class-name">JRBeanCollectionDataSource</span> ds <span class="token operator">=</span> <span class="token keyword">new</span>
    <span class="token class-name">JRBeanCollectionDataSource</span><span class="token punctuation">(</span><span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token class-name">JasperPrint</span> print <span class="token operator">=</span> <span class="token class-name">JasperFillManager</span><span class="token punctuation">.</span><span class="token function">fillReport</span><span class="token punctuation">(</span>fis<span class="token punctuation">,</span> parameters<span class="token punctuation">,</span><span class="token keyword">new</span>
    <span class="token class-name">JREmptyDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token comment">//3.将JasperPrint已PDF的形式输出</span>
               <span class="token class-name">JasperExportManager</span><span class="token punctuation">.</span><span class="token function">exportReportToPdfStream</span><span class="token punctuation">(</span>print<span class="token punctuation">,</span>os<span class="token punctuation">)</span><span class="token punctuation">;</span>
               response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JRException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
               os<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
       <span class="token comment">//创建数据库Connection</span>
       <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
           <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
           <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
           <span class="token keyword">return</span> list<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function yn(a,qn){return e(),o("div",null,[l,n("img",{src:a.$withBase("/pdf/1.png"),alt:"foo"},null,8,i),u,r,n("img",{src:a.$withBase("/pdf/2.png"),alt:"foo"},null,8,k),d,n("img",{src:a.$withBase("/pdf/3.png"),alt:"foo"},null,8,m),v,n("ol",null,[n("li",null,[b,n("ol",null,[n("li",null,[n("p",null,[s("打开Jaspersoft Studio ，新建一个project, 步骤： File -> New -> Project-> JasperReports Project "),n("img",{src:a.$withBase("/pdf/4.png"),alt:"foo"},null,8,g)])]),n("li",null,[n("p",null,[s("新建一个Jasper Report模板，在 Stidio的左下方Project Explorer 找到刚才新建的Project (我这里新建的是DemoReport),步骤：项目右键 -> New -> Jasper Report "),n("img",{src:a.$withBase("/pdf/5.png"),alt:"foo"},null,8,f)])]),n("li",null,[n("p",null,[s("选择 Blank A4 (A4纸大小的模板)，然后 Next 命名为DemoReport1.jrxml "),n("img",{src:a.$withBase("/pdf/6.png"),alt:"foo"},null,8,h),s(" 如图所示，报表模板被垂直的分层，每一个部分都是一个Band,每一个Band的特点不同： "),n("img",{src:a.$withBase("/pdf/7.png"),alt:"foo"},null,8,w)])])]),y]),n("li",null,[n("p",null,[s("编译模板 右键单机模板文件 -> compile Report 对模板进行编译，生成.jasper文件 "),n("img",{src:a.$withBase("/pdf/8.png"),alt:"foo"},null,8,q)])])]),_,n("ol",null,[n("li",null,[s("设计阶段需要指定中文样式 "),n("img",{src:a.$withBase("/pdf/9.png"),alt:"foo"},null,8,S)]),J]),R,n("ul",null,[n("li",null,[s("1.1.1 模板制作 "),n("ul",null,[n("li",null,[n("p",null,[s("（1） 创建新模板，删除不需要的Band "),n("img",{src:a.$withBase("/pdf/10.png"),alt:"foo"},null,8,j)])]),n("li",null,[n("p",null,[s("（2）创建Parameter 在outline面板中找到Parameters,右键 -> Create Parameter,新建一个Parameter(生成一个Paramerter1) "),n("img",{src:a.$withBase("/pdf/11.png"),alt:"foo"},null,8,P),s(" 右键 Paramete1 -> Show Properties. 设置Name为title、Class为java.lang.String.这里要注意名字要认真取不能重复，因为传入的参数的key就是这个参数名，以此来进行一一对应 "),n("img",{src:a.$withBase("/pdf/12.png"),alt:"foo"},null,8,F)])]),n("li",null,[n("p",null,[s("（3）模板参数设置 将设置好的参数直接拖入表格中对应的位置，并设置好大小与对齐方式。 "),n("img",{src:a.$withBase("/pdf/13.png"),alt:"foo"},null,8,x)])])])]),C]),B,n("ul",null,[n("li",null,[s("1.2.1 JDBC数据源 "),n("ul",null,[n("li",null,[s("1.2.1.1 配置数据连接 使用JDBC数据源填充数据：使用Jaspersoft Studio 先要配置一个数据库连接 "),n("img",{src:a.$withBase("/pdf/14.png"),alt:"foo"},null,8,D),s(" 配置数据库信息 "),n("img",{src:a.$withBase("/pdf/15.png"),alt:"foo"},null,8,M),s(" 这一步，需要： （1）给创建的这个数据连接起个名字； （2）根据数据库选择驱动类型； Jaspersoft Studio 已经内置了很多常用数据库的驱动，使用的时候直接选就可以了。当然，如果这还满足不了你的话，你还可以添加你指定的 JDBC 驱动 jar 包。")]),n("li",null,[s("1.2.1.2 模板制作 "),n("ul",null,[E,n("li",null,[s("（2）将数据库用户字段配置到模块中 为了方便的进行模板制作，可以将需要数据库表中的字段添加到Studio中。在outline中右键模板，选择dataset and query "),n("img",{src:a.$withBase("/pdf/16.png"),alt:"foo"},null,8,L),s(" 用户可以在 SQL 查询语句输入窗口中，输入需要查询数据的查询语句，点击右上角的“Read Fields”按钮，界面下方的字段列表中，就会显示此查询语句中所涵盖的所有字段的列表。在后面的报表设计中，我们就可以直接使用这些字段了。 "),n("img",{src:a.$withBase("/pdf/17.png"),alt:"foo"},null,8,H),s(" 在“Fields”列表中，只保留报表中使用的字段，其他用不到的字段最好用“Delete”删掉，防止由于数据表变化，导致报表模板中的字段设置与数据表对应不上，导致报表报错。输入完毕后，点击“OK”按钮，系统即会把查询语句保存在报表模板中。 "),n("img",{src:a.$withBase("/pdf/18.png"),alt:"foo"},null,8,T)]),n("li",null,[s("（3）填充Filed 将id,mobile，username等拖入到 Detail Band中设计模板如下： "),n("img",{src:a.$withBase("/pdf/19.png"),alt:"foo"},null,8,N)])])]),U])]),n("li",null,[s("1.2.2 JavaBean数据源 "),n("ul",null,[n("li",null,[s("1.2.2.1 创建Filed "),n("ul",null,[n("li",null,[s("（1）创建Filed "),n("img",{src:a.$withBase("/pdf/20.png"),alt:"foo"},null,8,$)]),n("li",null,[s("（2）构造模板 "),n("img",{src:a.$withBase("/pdf/21.png"),alt:"foo"},null,8,I)])])]),O])])]),X,A,G,V,n("ul",null,[Q,n("li",null,[s("（2）新建报表群组 选中报表名称点击右键，选择菜单中的“Create Group”。 "),n("img",{src:a.$withBase("/pdf/22.png"),alt:"foo"},null,8,K),s(" 需要设置分组的名称、分组字段。也可以设置按照指定的函数、方法处理后进行分组 "),n("img",{src:a.$withBase("/pdf/23.png"),alt:"foo"},null,8,W),s(" 按照字段“companyName”进行分组。设置完毕，点击“Next”。系统显示细节设置界面。此处可以设置是否加入“group header”和“group footer”区。建议保持默认选中，加入这两个区域，这样可以控制在每组报表的结尾，打印相应的信息，例如统计信息等。 "),n("img",{src:a.$withBase("/pdf/24.png"),alt:"foo"},null,8,z)]),n("li",null,[s("（3）放置报表数据 将companyName拖入 Group Header中 ，会跳出 TextField Wizard框，选中 NoCalculation Function "),n("img",{src:a.$withBase("/pdf/25.png"),alt:"foo"},null,8,Y),s(" 双击 $F{deptId} 会弹出Expression editor框 "),n("img",{src:a.$withBase("/pdf/26.png"),alt:"foo"},null,8,Z)])]),nn,n("p",null,[s("将需要作为表头打印的内容拖入 CompanyGroup Header1 栏，将字段拖入 detail 栏，将每个分组结尾需要打印的内容放入 Companygroup footer 栏，将页脚需要打印的内容放入 Page Footer栏，如下图。 "),n("img",{src:a.$withBase("/pdf/27.png"),alt:"foo"},null,8,sn)]),an,n("img",{src:a.$withBase("/pdf/28.png"),alt:"foo"},null,8,tn),pn,n("ol",null,[n("li",null,[s("创建模板 "),n("ul",null,[n("li",null,[s("（1）创建模板，删除不需要的band，保留title和summary。 "),n("img",{src:a.$withBase("/pdf/29.png"),alt:"foo"},null,8,en)]),n("li",null,[s("（2）创建fileds "),n("img",{src:a.$withBase("/pdf/30.png"),alt:"foo"},null,8,on)]),n("li",null,[s("（3）创建chart图标 "),n("ul",null,[cn,n("li",null,[s("第二步：选择需要的图表类型 "),n("img",{src:a.$withBase("/pdf/31.png"),alt:"foo"},null,8,ln)]),n("li",null,[s("第三步：设置图表参数 "),n("img",{src:a.$withBase("/pdf/32.png"),alt:"foo"},null,8,un),rn])])])])]),kn]),dn,mn,n("ul",null,[vn,n("li",null,[n("p",null,[s("制作子报表 点击组件面板上的“Subreport”按钮，拖动到报表工作区上。 "),n("img",{src:a.$withBase("/pdf/33.png"),alt:"foo"},null,8,bn),s(" 系统会自动弹出子报表选择窗口。可以选择创建一个新报表，还是使用一个已有的报表作为子报表。 "),n("img",{src:a.$withBase("/pdf/34.png"),alt:"foo"},null,8,gn),s(" 选择“Create a new report”，可以立即制作新的子报表；如果选择“Select an existing report”，则可以调用已经有的报表作为子报表；如果选择“Just create the subreport element”，系统会生成一个子报表区，可以在之后挂接需要的子报表。")])]),n("li",null,[n("p",null,[s("参数传递 "),n("img",{src:a.$withBase("/pdf/35.png"),alt:"foo"},null,8,fn)])]),hn]),wn])}const Sn=p(c,[["render",yn],["__file","Pdf.html.vue"]]);export{Sn as default};
